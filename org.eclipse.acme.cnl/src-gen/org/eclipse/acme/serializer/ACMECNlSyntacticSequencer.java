/*
 * generated by Xtext 2.21.0
 */
package org.eclipse.acme.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.acme.services.ACMECNlGrammarAccess;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class ACMECNlSyntacticSequencer extends AbstractSyntacticSequencer {

	protected ACMECNlGrammarAccess grammarAccess;
	protected AbstractElementAlias match_CNLRule_ErrorKeyword_2_0_q;
	protected AbstractElementAlias match_ComparisonExpression_EqualsKeyword_1_1_2_1_0_or_IsKeyword_1_1_2_1_1_or___MustKeyword_1_1_2_1_2_0_BeKeyword_1_1_2_1_2_1__;
	protected AbstractElementAlias match_ComparisonExpression_IsKeyword_1_1_4_1_0_1_or___MustKeyword_1_1_4_1_0_0_0_BeKeyword_1_1_4_1_0_0_1__;
	protected AbstractElementAlias match_ComparisonExpression_IsKeyword_1_1_5_1_0_1_or___MustKeyword_1_1_5_1_0_0_0_BeKeyword_1_1_5_1_0_0_1__;
	protected AbstractElementAlias match_ComparisonExpression___CannotKeyword_1_1_3_1_1_0_BeKeyword_1_1_3_1_1_1___or___IsKeyword_1_1_3_1_0_0_NotKeyword_1_1_3_1_0_1__;
	protected AbstractElementAlias match_ComparisonExpression_____IsKeyword_1_1_6_1_0_0_1_or___MustKeyword_1_1_6_1_0_0_0_0_BeKeyword_1_1_6_1_0_0_0_1_____GreaterKeyword_1_1_6_1_0_1_ThanKeyword_1_1_6_1_0_2_OrKeyword_1_1_6_1_0_3_EqualKeyword_1_1_6_1_0_4_ToKeyword_1_1_6_1_0_5___or_____IsKeyword_1_1_6_1_1_0_1_or___MustKeyword_1_1_6_1_1_0_0_0_BeKeyword_1_1_6_1_1_0_0_1_____GreaterKeyword_1_1_6_1_1_1_ThanKeyword_1_1_6_1_1_2_OrKeyword_1_1_6_1_1_3_EqualsKeyword_1_1_6_1_1_4__;
	protected AbstractElementAlias match_ComparisonExpression_____IsKeyword_1_1_7_1_0_0_1_or___MustKeyword_1_1_7_1_0_0_0_0_BeKeyword_1_1_7_1_0_0_0_1_____LessKeyword_1_1_7_1_0_1_ThanKeyword_1_1_7_1_0_2_OrKeyword_1_1_7_1_0_3_EqualKeyword_1_1_7_1_0_4_ToKeyword_1_1_7_1_0_5___or_____IsKeyword_1_1_7_1_1_0_1_or___MustKeyword_1_1_7_1_1_0_0_0_BeKeyword_1_1_7_1_1_0_0_1_____LessKeyword_1_1_7_1_1_1_ThanKeyword_1_1_7_1_1_2_OrKeyword_1_1_7_1_1_3_EqualsKeyword_1_1_7_1_1_4__;
	protected AbstractElementAlias match_DateExpression_AfterKeyword_1_2_1_0_or___LaterKeyword_1_2_1_1_0_ThanKeyword_1_2_1_1_1__;
	protected AbstractElementAlias match_DateExpression_BeforeKeyword_0_2_1_0_or_ByKeyword_0_2_1_1;
	protected AbstractElementAlias match_DateExpression___AfterKeyword_3_2_1_0_0_OrKeyword_3_2_1_0_1_ByKeyword_3_2_1_0_2___or___AfterKeyword_3_2_1_2_0_OrKeyword_3_2_1_2_1_EqualKeyword_3_2_1_2_2_ToKeyword_3_2_1_2_3___or___OnKeyword_3_2_1_1_0_OrKeyword_3_2_1_1_1_AfterKeyword_3_2_1_1_2__;
	protected AbstractElementAlias match_DateExpression___BeforeKeyword_2_2_1_0_0_OrKeyword_2_2_1_0_1_ByKeyword_2_2_1_0_2___or___BeforeKeyword_2_2_1_2_0_OrKeyword_2_2_1_2_1_EqualKeyword_2_2_1_2_2_ToKeyword_2_2_1_2_3___or___OnKeyword_2_2_1_1_0_OrKeyword_2_2_1_1_1_BeforeKeyword_2_2_1_1_2__;
	protected AbstractElementAlias match_DateExpression___IsKeyword_0_2_0_1_or___MustKeyword_0_2_0_0_0_BeKeyword_0_2_0_0_1____q;
	protected AbstractElementAlias match_DateExpression___IsKeyword_1_2_0_1_or___MustKeyword_1_2_0_0_0_BeKeyword_1_2_0_0_1____q;
	protected AbstractElementAlias match_DateExpression___IsKeyword_2_2_0_1_or___MustKeyword_2_2_0_0_0_BeKeyword_2_2_0_0_1____q;
	protected AbstractElementAlias match_DateExpression___IsKeyword_3_2_0_1_or___MustKeyword_3_2_0_0_0_BeKeyword_3_2_0_0_1____q;
	protected AbstractElementAlias match_EOLExpressionRule_ErrorKeyword_4_0_q;
	protected AbstractElementAlias match_EmptyValue___MustKeyword_1_0_BeKeyword_1_1__q;
	protected AbstractElementAlias match_EnumTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__;
	protected AbstractElementAlias match_ExistanceValue_ExistsKeyword_1_0_or___MustKeyword_1_1_0_ExistKeyword_1_1_1__;
	protected AbstractElementAlias match_FeatureValue_TheKeyword_0_q;
	protected AbstractElementAlias match_LogicalExpression_IfKeyword_0_1_1_1_1_or_WhenKeyword_0_1_1_1_0_or_WhereKeyword_0_1_1_1_2;
	protected AbstractElementAlias match_LogicalExpression_IfKeyword_1_1_0_or_WhenKeyword_1_1_1;
	protected AbstractElementAlias match_LogicalExpression_IffKeyword_0_1_5_1_0_or___IfKeyword_0_1_5_1_1_0_AndKeyword_0_1_5_1_1_1_OnlyKeyword_0_1_5_1_1_2_IfKeyword_0_1_5_1_1_3__;
	protected AbstractElementAlias match_LogicalExpression_ImpliesKeyword_0_1_0_1_0_or___OnlyKeyword_0_1_0_1_1_0_IfKeyword_0_1_0_1_1_1__;
	protected AbstractElementAlias match_LogicalExpression_TheKeyword_1_2_q;
	protected AbstractElementAlias match_NumericAverage_OfKeyword_2_q;
	protected AbstractElementAlias match_NumericMaximum_OfKeyword_2_q;
	protected AbstractElementAlias match_NumericMinimum_OfKeyword_2_q;
	protected AbstractElementAlias match_NumericSummation_OfKeyword_2_q;
	protected AbstractElementAlias match_PrimitiveTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__;
	protected AbstractElementAlias match_ScopedRules_AKeyword_0_1_0_0_or_AnKeyword_0_1_0_1;
	protected AbstractElementAlias match_ScopedRules_InKeyword_0_0_0_1_or___AllKeyword_0_0_0_3_0_OfKeyword_0_0_0_3_1_TheKeyword_0_0_0_3_2_FollowingKeyword_0_0_0_3_3_AreKeyword_0_0_0_3_4_____MandatoryKeyword_0_0_0_3_5_0_0_ForKeyword_0_0_0_3_5_0_1___or___MandatoryKeyword_0_0_0_3_5_4_0_InKeyword_0_0_0_3_5_4_1___or___NeededKeyword_0_0_0_3_5_2_0_ForKeyword_0_0_0_3_5_2_1___or___NeededKeyword_0_0_0_3_5_6_0_InKeyword_0_0_0_3_5_6_1___or___ObligatoryKeyword_0_0_0_3_5_3_0_ForKeyword_0_0_0_3_5_3_1___or___ObligatoryKeyword_0_0_0_3_5_7_0_InKeyword_0_0_0_3_5_7_1___or___RequiredKeyword_0_0_0_3_5_1_0_ForKeyword_0_0_0_3_5_1_1___or___RequiredKeyword_0_0_0_3_5_5_0_InKeyword_0_0_0_3_5_5_1_____AKeyword_0_0_0_3_6_q___or___ForKeyword_0_0_0_0_0_AllKeyword_0_0_0_0_1___or___InKeyword_0_0_0_2_0___AKeyword_0_0_0_2_1_0_or_AnKeyword_0_0_0_2_1_1____;
	protected AbstractElementAlias match_TypeValue___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__q;
	protected AbstractElementAlias match_UniquenessCheck_AndKeyword_2_0_1_or_CommaKeyword_2_0_0;
	protected AbstractElementAlias match_UniquenessCheck___AnyKeyword_0_0_CombinationKeyword_0_1_OfKeyword_0_2_ValuesKeyword_0_3_InKeyword_0_4__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (ACMECNlGrammarAccess) access;
		match_CNLRule_ErrorKeyword_2_0_q = new TokenAlias(false, true, grammarAccess.getCNLRuleAccess().getErrorKeyword_2_0());
		match_ComparisonExpression_EqualsKeyword_1_1_2_1_0_or_IsKeyword_1_1_2_1_1_or___MustKeyword_1_1_2_1_2_0_BeKeyword_1_1_2_1_2_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_2_1_2_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_2_1_2_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_2_1_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_2_1_1()));
		match_ComparisonExpression_IsKeyword_1_1_4_1_0_1_or___MustKeyword_1_1_4_1_0_0_0_BeKeyword_1_1_4_1_0_0_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_4_1_0_0_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_4_1_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_4_1_0_1()));
		match_ComparisonExpression_IsKeyword_1_1_5_1_0_1_or___MustKeyword_1_1_5_1_0_0_0_BeKeyword_1_1_5_1_0_0_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_5_1_0_0_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_5_1_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_5_1_0_1()));
		match_ComparisonExpression___CannotKeyword_1_1_3_1_1_0_BeKeyword_1_1_3_1_1_1___or___IsKeyword_1_1_3_1_0_0_NotKeyword_1_1_3_1_0_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getCannotKeyword_1_1_3_1_1_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_3_1_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_3_1_0_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getNotKeyword_1_1_3_1_0_1())));
		match_ComparisonExpression_____IsKeyword_1_1_6_1_0_0_1_or___MustKeyword_1_1_6_1_0_0_0_0_BeKeyword_1_1_6_1_0_0_0_1_____GreaterKeyword_1_1_6_1_0_1_ThanKeyword_1_1_6_1_0_2_OrKeyword_1_1_6_1_0_3_EqualKeyword_1_1_6_1_0_4_ToKeyword_1_1_6_1_0_5___or_____IsKeyword_1_1_6_1_1_0_1_or___MustKeyword_1_1_6_1_1_0_0_0_BeKeyword_1_1_6_1_1_0_0_1_____GreaterKeyword_1_1_6_1_1_1_ThanKeyword_1_1_6_1_1_2_OrKeyword_1_1_6_1_1_3_EqualsKeyword_1_1_6_1_1_4__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_6_1_0_0_0_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_6_1_0_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_6_1_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_6_1_0_1()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_6_1_0_2()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_6_1_0_3()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getEqualKeyword_1_1_6_1_0_4()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getToKeyword_1_1_6_1_0_5())), new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_6_1_1_0_0_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_6_1_1_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_6_1_1_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_6_1_1_1()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_6_1_1_2()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_6_1_1_3()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_6_1_1_4())));
		match_ComparisonExpression_____IsKeyword_1_1_7_1_0_0_1_or___MustKeyword_1_1_7_1_0_0_0_0_BeKeyword_1_1_7_1_0_0_0_1_____LessKeyword_1_1_7_1_0_1_ThanKeyword_1_1_7_1_0_2_OrKeyword_1_1_7_1_0_3_EqualKeyword_1_1_7_1_0_4_ToKeyword_1_1_7_1_0_5___or_____IsKeyword_1_1_7_1_1_0_1_or___MustKeyword_1_1_7_1_1_0_0_0_BeKeyword_1_1_7_1_1_0_0_1_____LessKeyword_1_1_7_1_1_1_ThanKeyword_1_1_7_1_1_2_OrKeyword_1_1_7_1_1_3_EqualsKeyword_1_1_7_1_1_4__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_7_1_0_0_0_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_7_1_0_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_7_1_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_7_1_0_1()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_7_1_0_2()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_7_1_0_3()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getEqualKeyword_1_1_7_1_0_4()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getToKeyword_1_1_7_1_0_5())), new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_7_1_1_0_0_0()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_7_1_1_0_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_7_1_1_0_1())), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_7_1_1_1()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_7_1_1_2()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_7_1_1_3()), new TokenAlias(false, false, grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_7_1_1_4())));
		match_DateExpression_AfterKeyword_1_2_1_0_or___LaterKeyword_1_2_1_1_0_ThanKeyword_1_2_1_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getLaterKeyword_1_2_1_1_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getThanKeyword_1_2_1_1_1())), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getAfterKeyword_1_2_1_0()));
		match_DateExpression_BeforeKeyword_0_2_1_0_or_ByKeyword_0_2_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeforeKeyword_0_2_1_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getByKeyword_0_2_1_1()));
		match_DateExpression___AfterKeyword_3_2_1_0_0_OrKeyword_3_2_1_0_1_ByKeyword_3_2_1_0_2___or___AfterKeyword_3_2_1_2_0_OrKeyword_3_2_1_2_1_EqualKeyword_3_2_1_2_2_ToKeyword_3_2_1_2_3___or___OnKeyword_3_2_1_1_0_OrKeyword_3_2_1_1_1_AfterKeyword_3_2_1_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_0_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_0_1()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getByKeyword_3_2_1_0_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_2_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_2_1()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getEqualKeyword_3_2_1_2_2()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getToKeyword_3_2_1_2_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOnKeyword_3_2_1_1_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_1_1()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_1_2())));
		match_DateExpression___BeforeKeyword_2_2_1_0_0_OrKeyword_2_2_1_0_1_ByKeyword_2_2_1_0_2___or___BeforeKeyword_2_2_1_2_0_OrKeyword_2_2_1_2_1_EqualKeyword_2_2_1_2_2_ToKeyword_2_2_1_2_3___or___OnKeyword_2_2_1_1_0_OrKeyword_2_2_1_1_1_BeforeKeyword_2_2_1_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_0_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_0_1()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getByKeyword_2_2_1_0_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_2_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_2_1()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getEqualKeyword_2_2_1_2_2()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getToKeyword_2_2_1_2_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOnKeyword_2_2_1_1_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_1_1()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_1_2())));
		match_DateExpression___IsKeyword_0_2_0_1_or___MustKeyword_0_2_0_0_0_BeKeyword_0_2_0_0_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getMustKeyword_0_2_0_0_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeKeyword_0_2_0_0_1())), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getIsKeyword_0_2_0_1()));
		match_DateExpression___IsKeyword_1_2_0_1_or___MustKeyword_1_2_0_0_0_BeKeyword_1_2_0_0_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getMustKeyword_1_2_0_0_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeKeyword_1_2_0_0_1())), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getIsKeyword_1_2_0_1()));
		match_DateExpression___IsKeyword_2_2_0_1_or___MustKeyword_2_2_0_0_0_BeKeyword_2_2_0_0_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getMustKeyword_2_2_0_0_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeKeyword_2_2_0_0_1())), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getIsKeyword_2_2_0_1()));
		match_DateExpression___IsKeyword_3_2_0_1_or___MustKeyword_3_2_0_0_0_BeKeyword_3_2_0_0_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getMustKeyword_3_2_0_0_0()), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getBeKeyword_3_2_0_0_1())), new TokenAlias(false, false, grammarAccess.getDateExpressionAccess().getIsKeyword_3_2_0_1()));
		match_EOLExpressionRule_ErrorKeyword_4_0_q = new TokenAlias(false, true, grammarAccess.getEOLExpressionRuleAccess().getErrorKeyword_4_0());
		match_EmptyValue___MustKeyword_1_0_BeKeyword_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getEmptyValueAccess().getMustKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getEmptyValueAccess().getBeKeyword_1_1()));
		match_EnumTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getIsKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getOfKeyword_1_0_1()), new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getTypeKeyword_1_0_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getIsKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getAKeyword_1_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getMustKeyword_1_2_0()), new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getBeKeyword_1_2_1()), new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getAKeyword_1_2_2_0()), new TokenAlias(false, false, grammarAccess.getEnumTypeExpressionAccess().getInKeyword_1_2_2_1()))));
		match_ExistanceValue_ExistsKeyword_1_0_or___MustKeyword_1_1_0_ExistKeyword_1_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExistanceValueAccess().getMustKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getExistanceValueAccess().getExistKeyword_1_1_1())), new TokenAlias(false, false, grammarAccess.getExistanceValueAccess().getExistsKeyword_1_0()));
		match_FeatureValue_TheKeyword_0_q = new TokenAlias(false, true, grammarAccess.getFeatureValueAccess().getTheKeyword_0());
		match_LogicalExpression_IfKeyword_0_1_1_1_1_or_WhenKeyword_0_1_1_1_0_or_WhereKeyword_0_1_1_1_2 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_1_1_1()), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getWhenKeyword_0_1_1_1_0()), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getWhereKeyword_0_1_1_1_2()));
		match_LogicalExpression_IfKeyword_1_1_0_or_WhenKeyword_1_1_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getIfKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getWhenKeyword_1_1_1()));
		match_LogicalExpression_IffKeyword_0_1_5_1_0_or___IfKeyword_0_1_5_1_1_0_AndKeyword_0_1_5_1_1_1_OnlyKeyword_0_1_5_1_1_2_IfKeyword_0_1_5_1_1_3__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_5_1_1_0()), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getAndKeyword_0_1_5_1_1_1()), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getOnlyKeyword_0_1_5_1_1_2()), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_5_1_1_3())), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getIffKeyword_0_1_5_1_0()));
		match_LogicalExpression_ImpliesKeyword_0_1_0_1_0_or___OnlyKeyword_0_1_0_1_1_0_IfKeyword_0_1_0_1_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getOnlyKeyword_0_1_0_1_1_0()), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_0_1_1_1())), new TokenAlias(false, false, grammarAccess.getLogicalExpressionAccess().getImpliesKeyword_0_1_0_1_0()));
		match_LogicalExpression_TheKeyword_1_2_q = new TokenAlias(false, true, grammarAccess.getLogicalExpressionAccess().getTheKeyword_1_2());
		match_NumericAverage_OfKeyword_2_q = new TokenAlias(false, true, grammarAccess.getNumericAverageAccess().getOfKeyword_2());
		match_NumericMaximum_OfKeyword_2_q = new TokenAlias(false, true, grammarAccess.getNumericMaximumAccess().getOfKeyword_2());
		match_NumericMinimum_OfKeyword_2_q = new TokenAlias(false, true, grammarAccess.getNumericMinimumAccess().getOfKeyword_2());
		match_NumericSummation_OfKeyword_2_q = new TokenAlias(false, true, grammarAccess.getNumericSummationAccess().getOfKeyword_2());
		match_PrimitiveTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getIsKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getOfKeyword_1_0_1()), new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getTypeKeyword_1_0_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getIsKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getAKeyword_1_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getMustKeyword_1_2_0()), new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getBeKeyword_1_2_1()), new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getAKeyword_1_2_2_0()), new TokenAlias(false, false, grammarAccess.getPrimitiveTypeExpressionAccess().getInKeyword_1_2_2_1()))));
		match_ScopedRules_AKeyword_0_1_0_0_or_AnKeyword_0_1_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getAKeyword_0_1_0_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getAnKeyword_0_1_0_1()));
		match_ScopedRules_InKeyword_0_0_0_1_or___AllKeyword_0_0_0_3_0_OfKeyword_0_0_0_3_1_TheKeyword_0_0_0_3_2_FollowingKeyword_0_0_0_3_3_AreKeyword_0_0_0_3_4_____MandatoryKeyword_0_0_0_3_5_0_0_ForKeyword_0_0_0_3_5_0_1___or___MandatoryKeyword_0_0_0_3_5_4_0_InKeyword_0_0_0_3_5_4_1___or___NeededKeyword_0_0_0_3_5_2_0_ForKeyword_0_0_0_3_5_2_1___or___NeededKeyword_0_0_0_3_5_6_0_InKeyword_0_0_0_3_5_6_1___or___ObligatoryKeyword_0_0_0_3_5_3_0_ForKeyword_0_0_0_3_5_3_1___or___ObligatoryKeyword_0_0_0_3_5_7_0_InKeyword_0_0_0_3_5_7_1___or___RequiredKeyword_0_0_0_3_5_1_0_ForKeyword_0_0_0_3_5_1_1___or___RequiredKeyword_0_0_0_3_5_5_0_InKeyword_0_0_0_3_5_5_1_____AKeyword_0_0_0_3_6_q___or___ForKeyword_0_0_0_0_0_AllKeyword_0_0_0_0_1___or___InKeyword_0_0_0_2_0___AKeyword_0_0_0_2_1_0_or_AnKeyword_0_0_0_2_1_1____ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getAllKeyword_0_0_0_3_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getOfKeyword_0_0_0_3_1()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getTheKeyword_0_0_0_3_2()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getFollowingKeyword_0_0_0_3_3()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getAreKeyword_0_0_0_3_4()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getMandatoryKeyword_0_0_0_3_5_0_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_0_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getMandatoryKeyword_0_0_0_3_5_4_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_4_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getNeededKeyword_0_0_0_3_5_2_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_2_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getNeededKeyword_0_0_0_3_5_6_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_6_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getObligatoryKeyword_0_0_0_3_5_3_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_3_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getObligatoryKeyword_0_0_0_3_5_7_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_7_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getRequiredKeyword_0_0_0_3_5_1_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getRequiredKeyword_0_0_0_3_5_5_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_5_1()))), new TokenAlias(false, true, grammarAccess.getScopedRulesAccess().getAKeyword_0_0_0_3_6())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_0_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getAllKeyword_0_0_0_0_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_2_0()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getAKeyword_0_0_0_2_1_0()), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getAnKeyword_0_0_0_2_1_1()))), new TokenAlias(false, false, grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_1()));
		match_TypeValue___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTypeValueAccess().getLeftCurlyBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getTypeValueAccess().getRightCurlyBracketKeyword_1_2()));
		match_UniquenessCheck_AndKeyword_2_0_1_or_CommaKeyword_2_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getUniquenessCheckAccess().getAndKeyword_2_0_1()), new TokenAlias(false, false, grammarAccess.getUniquenessCheckAccess().getCommaKeyword_2_0_0()));
		match_UniquenessCheck___AnyKeyword_0_0_CombinationKeyword_0_1_OfKeyword_0_2_ValuesKeyword_0_3_InKeyword_0_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getUniquenessCheckAccess().getAnyKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getUniquenessCheckAccess().getCombinationKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getUniquenessCheckAccess().getOfKeyword_0_2()), new TokenAlias(false, false, grammarAccess.getUniquenessCheckAccess().getValuesKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getUniquenessCheckAccess().getInKeyword_0_4()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_CNLRule_ErrorKeyword_2_0_q.equals(syntax))
				emit_CNLRule_ErrorKeyword_2_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ComparisonExpression_EqualsKeyword_1_1_2_1_0_or_IsKeyword_1_1_2_1_1_or___MustKeyword_1_1_2_1_2_0_BeKeyword_1_1_2_1_2_1__.equals(syntax))
				emit_ComparisonExpression_EqualsKeyword_1_1_2_1_0_or_IsKeyword_1_1_2_1_1_or___MustKeyword_1_1_2_1_2_0_BeKeyword_1_1_2_1_2_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ComparisonExpression_IsKeyword_1_1_4_1_0_1_or___MustKeyword_1_1_4_1_0_0_0_BeKeyword_1_1_4_1_0_0_1__.equals(syntax))
				emit_ComparisonExpression_IsKeyword_1_1_4_1_0_1_or___MustKeyword_1_1_4_1_0_0_0_BeKeyword_1_1_4_1_0_0_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ComparisonExpression_IsKeyword_1_1_5_1_0_1_or___MustKeyword_1_1_5_1_0_0_0_BeKeyword_1_1_5_1_0_0_1__.equals(syntax))
				emit_ComparisonExpression_IsKeyword_1_1_5_1_0_1_or___MustKeyword_1_1_5_1_0_0_0_BeKeyword_1_1_5_1_0_0_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ComparisonExpression___CannotKeyword_1_1_3_1_1_0_BeKeyword_1_1_3_1_1_1___or___IsKeyword_1_1_3_1_0_0_NotKeyword_1_1_3_1_0_1__.equals(syntax))
				emit_ComparisonExpression___CannotKeyword_1_1_3_1_1_0_BeKeyword_1_1_3_1_1_1___or___IsKeyword_1_1_3_1_0_0_NotKeyword_1_1_3_1_0_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ComparisonExpression_____IsKeyword_1_1_6_1_0_0_1_or___MustKeyword_1_1_6_1_0_0_0_0_BeKeyword_1_1_6_1_0_0_0_1_____GreaterKeyword_1_1_6_1_0_1_ThanKeyword_1_1_6_1_0_2_OrKeyword_1_1_6_1_0_3_EqualKeyword_1_1_6_1_0_4_ToKeyword_1_1_6_1_0_5___or_____IsKeyword_1_1_6_1_1_0_1_or___MustKeyword_1_1_6_1_1_0_0_0_BeKeyword_1_1_6_1_1_0_0_1_____GreaterKeyword_1_1_6_1_1_1_ThanKeyword_1_1_6_1_1_2_OrKeyword_1_1_6_1_1_3_EqualsKeyword_1_1_6_1_1_4__.equals(syntax))
				emit_ComparisonExpression_____IsKeyword_1_1_6_1_0_0_1_or___MustKeyword_1_1_6_1_0_0_0_0_BeKeyword_1_1_6_1_0_0_0_1_____GreaterKeyword_1_1_6_1_0_1_ThanKeyword_1_1_6_1_0_2_OrKeyword_1_1_6_1_0_3_EqualKeyword_1_1_6_1_0_4_ToKeyword_1_1_6_1_0_5___or_____IsKeyword_1_1_6_1_1_0_1_or___MustKeyword_1_1_6_1_1_0_0_0_BeKeyword_1_1_6_1_1_0_0_1_____GreaterKeyword_1_1_6_1_1_1_ThanKeyword_1_1_6_1_1_2_OrKeyword_1_1_6_1_1_3_EqualsKeyword_1_1_6_1_1_4__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ComparisonExpression_____IsKeyword_1_1_7_1_0_0_1_or___MustKeyword_1_1_7_1_0_0_0_0_BeKeyword_1_1_7_1_0_0_0_1_____LessKeyword_1_1_7_1_0_1_ThanKeyword_1_1_7_1_0_2_OrKeyword_1_1_7_1_0_3_EqualKeyword_1_1_7_1_0_4_ToKeyword_1_1_7_1_0_5___or_____IsKeyword_1_1_7_1_1_0_1_or___MustKeyword_1_1_7_1_1_0_0_0_BeKeyword_1_1_7_1_1_0_0_1_____LessKeyword_1_1_7_1_1_1_ThanKeyword_1_1_7_1_1_2_OrKeyword_1_1_7_1_1_3_EqualsKeyword_1_1_7_1_1_4__.equals(syntax))
				emit_ComparisonExpression_____IsKeyword_1_1_7_1_0_0_1_or___MustKeyword_1_1_7_1_0_0_0_0_BeKeyword_1_1_7_1_0_0_0_1_____LessKeyword_1_1_7_1_0_1_ThanKeyword_1_1_7_1_0_2_OrKeyword_1_1_7_1_0_3_EqualKeyword_1_1_7_1_0_4_ToKeyword_1_1_7_1_0_5___or_____IsKeyword_1_1_7_1_1_0_1_or___MustKeyword_1_1_7_1_1_0_0_0_BeKeyword_1_1_7_1_1_0_0_1_____LessKeyword_1_1_7_1_1_1_ThanKeyword_1_1_7_1_1_2_OrKeyword_1_1_7_1_1_3_EqualsKeyword_1_1_7_1_1_4__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression_AfterKeyword_1_2_1_0_or___LaterKeyword_1_2_1_1_0_ThanKeyword_1_2_1_1_1__.equals(syntax))
				emit_DateExpression_AfterKeyword_1_2_1_0_or___LaterKeyword_1_2_1_1_0_ThanKeyword_1_2_1_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression_BeforeKeyword_0_2_1_0_or_ByKeyword_0_2_1_1.equals(syntax))
				emit_DateExpression_BeforeKeyword_0_2_1_0_or_ByKeyword_0_2_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression___AfterKeyword_3_2_1_0_0_OrKeyword_3_2_1_0_1_ByKeyword_3_2_1_0_2___or___AfterKeyword_3_2_1_2_0_OrKeyword_3_2_1_2_1_EqualKeyword_3_2_1_2_2_ToKeyword_3_2_1_2_3___or___OnKeyword_3_2_1_1_0_OrKeyword_3_2_1_1_1_AfterKeyword_3_2_1_1_2__.equals(syntax))
				emit_DateExpression___AfterKeyword_3_2_1_0_0_OrKeyword_3_2_1_0_1_ByKeyword_3_2_1_0_2___or___AfterKeyword_3_2_1_2_0_OrKeyword_3_2_1_2_1_EqualKeyword_3_2_1_2_2_ToKeyword_3_2_1_2_3___or___OnKeyword_3_2_1_1_0_OrKeyword_3_2_1_1_1_AfterKeyword_3_2_1_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression___BeforeKeyword_2_2_1_0_0_OrKeyword_2_2_1_0_1_ByKeyword_2_2_1_0_2___or___BeforeKeyword_2_2_1_2_0_OrKeyword_2_2_1_2_1_EqualKeyword_2_2_1_2_2_ToKeyword_2_2_1_2_3___or___OnKeyword_2_2_1_1_0_OrKeyword_2_2_1_1_1_BeforeKeyword_2_2_1_1_2__.equals(syntax))
				emit_DateExpression___BeforeKeyword_2_2_1_0_0_OrKeyword_2_2_1_0_1_ByKeyword_2_2_1_0_2___or___BeforeKeyword_2_2_1_2_0_OrKeyword_2_2_1_2_1_EqualKeyword_2_2_1_2_2_ToKeyword_2_2_1_2_3___or___OnKeyword_2_2_1_1_0_OrKeyword_2_2_1_1_1_BeforeKeyword_2_2_1_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression___IsKeyword_0_2_0_1_or___MustKeyword_0_2_0_0_0_BeKeyword_0_2_0_0_1____q.equals(syntax))
				emit_DateExpression___IsKeyword_0_2_0_1_or___MustKeyword_0_2_0_0_0_BeKeyword_0_2_0_0_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression___IsKeyword_1_2_0_1_or___MustKeyword_1_2_0_0_0_BeKeyword_1_2_0_0_1____q.equals(syntax))
				emit_DateExpression___IsKeyword_1_2_0_1_or___MustKeyword_1_2_0_0_0_BeKeyword_1_2_0_0_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression___IsKeyword_2_2_0_1_or___MustKeyword_2_2_0_0_0_BeKeyword_2_2_0_0_1____q.equals(syntax))
				emit_DateExpression___IsKeyword_2_2_0_1_or___MustKeyword_2_2_0_0_0_BeKeyword_2_2_0_0_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateExpression___IsKeyword_3_2_0_1_or___MustKeyword_3_2_0_0_0_BeKeyword_3_2_0_0_1____q.equals(syntax))
				emit_DateExpression___IsKeyword_3_2_0_1_or___MustKeyword_3_2_0_0_0_BeKeyword_3_2_0_0_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EOLExpressionRule_ErrorKeyword_4_0_q.equals(syntax))
				emit_EOLExpressionRule_ErrorKeyword_4_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EmptyValue___MustKeyword_1_0_BeKeyword_1_1__q.equals(syntax))
				emit_EmptyValue___MustKeyword_1_0_BeKeyword_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EnumTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__.equals(syntax))
				emit_EnumTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExistanceValue_ExistsKeyword_1_0_or___MustKeyword_1_1_0_ExistKeyword_1_1_1__.equals(syntax))
				emit_ExistanceValue_ExistsKeyword_1_0_or___MustKeyword_1_1_0_ExistKeyword_1_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FeatureValue_TheKeyword_0_q.equals(syntax))
				emit_FeatureValue_TheKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LogicalExpression_IfKeyword_0_1_1_1_1_or_WhenKeyword_0_1_1_1_0_or_WhereKeyword_0_1_1_1_2.equals(syntax))
				emit_LogicalExpression_IfKeyword_0_1_1_1_1_or_WhenKeyword_0_1_1_1_0_or_WhereKeyword_0_1_1_1_2(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LogicalExpression_IfKeyword_1_1_0_or_WhenKeyword_1_1_1.equals(syntax))
				emit_LogicalExpression_IfKeyword_1_1_0_or_WhenKeyword_1_1_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LogicalExpression_IffKeyword_0_1_5_1_0_or___IfKeyword_0_1_5_1_1_0_AndKeyword_0_1_5_1_1_1_OnlyKeyword_0_1_5_1_1_2_IfKeyword_0_1_5_1_1_3__.equals(syntax))
				emit_LogicalExpression_IffKeyword_0_1_5_1_0_or___IfKeyword_0_1_5_1_1_0_AndKeyword_0_1_5_1_1_1_OnlyKeyword_0_1_5_1_1_2_IfKeyword_0_1_5_1_1_3__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LogicalExpression_ImpliesKeyword_0_1_0_1_0_or___OnlyKeyword_0_1_0_1_1_0_IfKeyword_0_1_0_1_1_1__.equals(syntax))
				emit_LogicalExpression_ImpliesKeyword_0_1_0_1_0_or___OnlyKeyword_0_1_0_1_1_0_IfKeyword_0_1_0_1_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LogicalExpression_TheKeyword_1_2_q.equals(syntax))
				emit_LogicalExpression_TheKeyword_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NumericAverage_OfKeyword_2_q.equals(syntax))
				emit_NumericAverage_OfKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NumericMaximum_OfKeyword_2_q.equals(syntax))
				emit_NumericMaximum_OfKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NumericMinimum_OfKeyword_2_q.equals(syntax))
				emit_NumericMinimum_OfKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NumericSummation_OfKeyword_2_q.equals(syntax))
				emit_NumericSummation_OfKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PrimitiveTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__.equals(syntax))
				emit_PrimitiveTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ScopedRules_AKeyword_0_1_0_0_or_AnKeyword_0_1_0_1.equals(syntax))
				emit_ScopedRules_AKeyword_0_1_0_0_or_AnKeyword_0_1_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ScopedRules_InKeyword_0_0_0_1_or___AllKeyword_0_0_0_3_0_OfKeyword_0_0_0_3_1_TheKeyword_0_0_0_3_2_FollowingKeyword_0_0_0_3_3_AreKeyword_0_0_0_3_4_____MandatoryKeyword_0_0_0_3_5_0_0_ForKeyword_0_0_0_3_5_0_1___or___MandatoryKeyword_0_0_0_3_5_4_0_InKeyword_0_0_0_3_5_4_1___or___NeededKeyword_0_0_0_3_5_2_0_ForKeyword_0_0_0_3_5_2_1___or___NeededKeyword_0_0_0_3_5_6_0_InKeyword_0_0_0_3_5_6_1___or___ObligatoryKeyword_0_0_0_3_5_3_0_ForKeyword_0_0_0_3_5_3_1___or___ObligatoryKeyword_0_0_0_3_5_7_0_InKeyword_0_0_0_3_5_7_1___or___RequiredKeyword_0_0_0_3_5_1_0_ForKeyword_0_0_0_3_5_1_1___or___RequiredKeyword_0_0_0_3_5_5_0_InKeyword_0_0_0_3_5_5_1_____AKeyword_0_0_0_3_6_q___or___ForKeyword_0_0_0_0_0_AllKeyword_0_0_0_0_1___or___InKeyword_0_0_0_2_0___AKeyword_0_0_0_2_1_0_or_AnKeyword_0_0_0_2_1_1____.equals(syntax))
				emit_ScopedRules_InKeyword_0_0_0_1_or___AllKeyword_0_0_0_3_0_OfKeyword_0_0_0_3_1_TheKeyword_0_0_0_3_2_FollowingKeyword_0_0_0_3_3_AreKeyword_0_0_0_3_4_____MandatoryKeyword_0_0_0_3_5_0_0_ForKeyword_0_0_0_3_5_0_1___or___MandatoryKeyword_0_0_0_3_5_4_0_InKeyword_0_0_0_3_5_4_1___or___NeededKeyword_0_0_0_3_5_2_0_ForKeyword_0_0_0_3_5_2_1___or___NeededKeyword_0_0_0_3_5_6_0_InKeyword_0_0_0_3_5_6_1___or___ObligatoryKeyword_0_0_0_3_5_3_0_ForKeyword_0_0_0_3_5_3_1___or___ObligatoryKeyword_0_0_0_3_5_7_0_InKeyword_0_0_0_3_5_7_1___or___RequiredKeyword_0_0_0_3_5_1_0_ForKeyword_0_0_0_3_5_1_1___or___RequiredKeyword_0_0_0_3_5_5_0_InKeyword_0_0_0_3_5_5_1_____AKeyword_0_0_0_3_6_q___or___ForKeyword_0_0_0_0_0_AllKeyword_0_0_0_0_1___or___InKeyword_0_0_0_2_0___AKeyword_0_0_0_2_1_0_or_AnKeyword_0_0_0_2_1_1____(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypeValue___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__q.equals(syntax))
				emit_TypeValue___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UniquenessCheck_AndKeyword_2_0_1_or_CommaKeyword_2_0_0.equals(syntax))
				emit_UniquenessCheck_AndKeyword_2_0_1_or_CommaKeyword_2_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UniquenessCheck___AnyKeyword_0_0_CombinationKeyword_0_1_OfKeyword_0_2_ValuesKeyword_0_3_InKeyword_0_4__q.equals(syntax))
				emit_UniquenessCheck___AnyKeyword_0_0_CombinationKeyword_0_1_OfKeyword_0_2_ValuesKeyword_0_3_InKeyword_0_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'error'?
	 *
	 * This ambiguous syntax occurs at:
	 *     astRoot=LogicalExpression (ambiguity) 'message' message=STRING
	 */
	protected void emit_CNLRule_ErrorKeyword_2_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'equals' | 'is' | ('must' 'be')
	 *
	 * This ambiguous syntax occurs at:
	 *     {EqualityExpression.lhs=} (ambiguity) rhs=ArithmeticExpression
	 */
	protected void emit_ComparisonExpression_EqualsKeyword_1_1_2_1_0_or_IsKeyword_1_1_2_1_1_or___MustKeyword_1_1_2_1_2_0_BeKeyword_1_1_2_1_2_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('must' 'be') | 'is'
	 *
	 * This ambiguous syntax occurs at:
	 *     {GreaterThanExpression.lhs=} (ambiguity) 'greater' 'than' rhs=ArithmeticExpression
	 */
	protected void emit_ComparisonExpression_IsKeyword_1_1_4_1_0_1_or___MustKeyword_1_1_4_1_0_0_0_BeKeyword_1_1_4_1_0_0_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('must' 'be') | 'is'
	 *
	 * This ambiguous syntax occurs at:
	 *     {LessThanExpression.lhs=} (ambiguity) 'less' 'than' rhs=ArithmeticExpression
	 */
	protected void emit_ComparisonExpression_IsKeyword_1_1_5_1_0_1_or___MustKeyword_1_1_5_1_0_0_0_BeKeyword_1_1_5_1_0_0_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('is' 'not') | ('cannot' 'be')
	 *
	 * This ambiguous syntax occurs at:
	 *     {NegatedEqualityExpression.lhs=} (ambiguity) rhs=ArithmeticExpression
	 */
	protected void emit_ComparisonExpression___CannotKeyword_1_1_3_1_1_0_BeKeyword_1_1_3_1_1_1___or___IsKeyword_1_1_3_1_0_0_NotKeyword_1_1_3_1_0_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             (('must' 'be') | 'is') 
	  *             'greater' 
	  *             'than' 
	  *             'or' 
	  *             'equal' 
	  *             'to'
	  *         ) | 
	  *         ((('must' 'be') | 'is') 'greater' 'than' 'or' 'equals')
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     {GTEExpression.lhs=} (ambiguity) rhs=ArithmeticExpression
	 */
	protected void emit_ComparisonExpression_____IsKeyword_1_1_6_1_0_0_1_or___MustKeyword_1_1_6_1_0_0_0_0_BeKeyword_1_1_6_1_0_0_0_1_____GreaterKeyword_1_1_6_1_0_1_ThanKeyword_1_1_6_1_0_2_OrKeyword_1_1_6_1_0_3_EqualKeyword_1_1_6_1_0_4_ToKeyword_1_1_6_1_0_5___or_____IsKeyword_1_1_6_1_1_0_1_or___MustKeyword_1_1_6_1_1_0_0_0_BeKeyword_1_1_6_1_1_0_0_1_____GreaterKeyword_1_1_6_1_1_1_ThanKeyword_1_1_6_1_1_2_OrKeyword_1_1_6_1_1_3_EqualsKeyword_1_1_6_1_1_4__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             (('must' 'be') | 'is') 
	  *             'less' 
	  *             'than' 
	  *             'or' 
	  *             'equal' 
	  *             'to'
	  *         ) | 
	  *         ((('must' 'be') | 'is') 'less' 'than' 'or' 'equals')
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     {LTEExpression.lhs=} (ambiguity) rhs=ArithmeticExpression
	 */
	protected void emit_ComparisonExpression_____IsKeyword_1_1_7_1_0_0_1_or___MustKeyword_1_1_7_1_0_0_0_0_BeKeyword_1_1_7_1_0_0_0_1_____LessKeyword_1_1_7_1_0_1_ThanKeyword_1_1_7_1_0_2_OrKeyword_1_1_7_1_0_3_EqualKeyword_1_1_7_1_0_4_ToKeyword_1_1_7_1_0_5___or_____IsKeyword_1_1_7_1_1_0_1_or___MustKeyword_1_1_7_1_1_0_0_0_BeKeyword_1_1_7_1_1_0_0_1_____LessKeyword_1_1_7_1_1_1_ThanKeyword_1_1_7_1_1_2_OrKeyword_1_1_7_1_1_3_EqualsKeyword_1_1_7_1_1_4__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'after' | ('later' 'than')
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (('must' 'be') | 'is')? (ambiguity) rhs=BaseExpression
	 */
	protected void emit_DateExpression_AfterKeyword_1_2_1_0_or___LaterKeyword_1_2_1_1_0_ThanKeyword_1_2_1_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'before' | 'by'
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (('must' 'be') | 'is')? (ambiguity) rhs=BaseExpression
	 */
	protected void emit_DateExpression_BeforeKeyword_0_2_1_0_or_ByKeyword_0_2_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('after' 'or' 'by') | ('on' 'or' 'after') | ('after' 'or' 'equal' 'to')
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (('must' 'be') | 'is')? (ambiguity) rhs=BaseExpression
	 */
	protected void emit_DateExpression___AfterKeyword_3_2_1_0_0_OrKeyword_3_2_1_0_1_ByKeyword_3_2_1_0_2___or___AfterKeyword_3_2_1_2_0_OrKeyword_3_2_1_2_1_EqualKeyword_3_2_1_2_2_ToKeyword_3_2_1_2_3___or___OnKeyword_3_2_1_1_0_OrKeyword_3_2_1_1_1_AfterKeyword_3_2_1_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('before' 'or' 'by') | ('on' 'or' 'before') | ('before' 'or' 'equal' 'to')
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (('must' 'be') | 'is')? (ambiguity) rhs=BaseExpression
	 */
	protected void emit_DateExpression___BeforeKeyword_2_2_1_0_0_OrKeyword_2_2_1_0_1_ByKeyword_2_2_1_0_2___or___BeforeKeyword_2_2_1_2_0_OrKeyword_2_2_1_2_1_EqualKeyword_2_2_1_2_2_ToKeyword_2_2_1_2_3___or___OnKeyword_2_2_1_1_0_OrKeyword_2_2_1_1_1_BeforeKeyword_2_2_1_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('must' 'be') | 'is')?
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (ambiguity) ('before' | 'by') rhs=BaseExpression
	 */
	protected void emit_DateExpression___IsKeyword_0_2_0_1_or___MustKeyword_0_2_0_0_0_BeKeyword_0_2_0_0_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('must' 'be') | 'is')?
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (ambiguity) ('after' | ('later' 'than')) rhs=BaseExpression
	 */
	protected void emit_DateExpression___IsKeyword_1_2_0_1_or___MustKeyword_1_2_0_0_0_BeKeyword_1_2_0_0_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('must' 'be') | 'is')?
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (ambiguity) (('before' 'or' 'by') | ('on' 'or' 'before') | ('before' 'or' 'equal' 'to')) rhs=BaseExpression
	 */
	protected void emit_DateExpression___IsKeyword_2_2_0_1_or___MustKeyword_2_2_0_0_0_BeKeyword_2_2_0_0_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('must' 'be') | 'is')?
	 *
	 * This ambiguous syntax occurs at:
	 *     lhs=BaseExpression (ambiguity) (('after' 'or' 'by') | ('on' 'or' 'after') | ('after' 'or' 'equal' 'to')) rhs=BaseExpression
	 */
	protected void emit_DateExpression___IsKeyword_3_2_0_1_or___MustKeyword_3_2_0_0_0_BeKeyword_3_2_0_0_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'error'?
	 *
	 * This ambiguous syntax occurs at:
	 *     code=STRING '</EOLExpression>' (ambiguity) 'message' message=STRING
	 */
	protected void emit_EOLExpressionRule_ErrorKeyword_4_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('must' 'be')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'empty' (rule start)
	 */
	protected void emit_EmptyValue___MustKeyword_1_0_BeKeyword_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('is' 'of' 'type') | ('is' 'a') | ('must' 'be' ('a' | 'in')?)
	 *
	 * This ambiguous syntax occurs at:
	 *     feature=FeatureValue (ambiguity) type=[Enum|ID]
	 */
	protected void emit_EnumTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'exists' | ('must' 'exist')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_ExistanceValue_ExistsKeyword_1_0_or___MustKeyword_1_1_0_ExistKeyword_1_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'the'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) feature=[Feature|ID]
	 */
	protected void emit_FeatureValue_TheKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'when' | 'if' | 'where'
	 *
	 * This ambiguous syntax occurs at:
	 *     {ImpliesExpression.rhs=} (ambiguity) lhs=ComparisonExpression
	 */
	protected void emit_LogicalExpression_IfKeyword_0_1_1_1_1_or_WhenKeyword_0_1_1_1_0_or_WhereKeyword_0_1_1_1_2(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'if' | 'when'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'the'? lhs=LogicalExpression
	 */
	protected void emit_LogicalExpression_IfKeyword_1_1_0_or_WhenKeyword_1_1_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'iff' | ('if' 'and' 'only' 'if')
	 *
	 * This ambiguous syntax occurs at:
	 *     {IfandonlyifExpression.lhs=} (ambiguity) rhs=ComparisonExpression
	 */
	protected void emit_LogicalExpression_IffKeyword_0_1_5_1_0_or___IfKeyword_0_1_5_1_1_0_AndKeyword_0_1_5_1_1_1_OnlyKeyword_0_1_5_1_1_2_IfKeyword_0_1_5_1_1_3__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'implies' | ('only' 'if')
	 *
	 * This ambiguous syntax occurs at:
	 *     {ImpliesExpression.lhs=} (ambiguity) rhs=ComparisonExpression
	 */
	protected void emit_LogicalExpression_ImpliesKeyword_0_1_0_1_0_or___OnlyKeyword_0_1_0_1_1_0_IfKeyword_0_1_0_1_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'the'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ('if' | 'when') (ambiguity) lhs=LogicalExpression
	 */
	protected void emit_LogicalExpression_TheKeyword_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'the' 'average' (ambiguity) feature=FeatureValue
	 *     (rule start) 'the' 'average' (ambiguity) feature=UnscopedFeatureValue
	 *     (rule start) 'the' 'average' (ambiguity) feature=VariableFeatureValue
	 */
	protected void emit_NumericAverage_OfKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'the' 'maximum' (ambiguity) feature=FeatureValue
	 *     (rule start) 'the' 'maximum' (ambiguity) feature=UnscopedFeatureValue
	 *     (rule start) 'the' 'maximum' (ambiguity) feature=VariableFeatureValue
	 */
	protected void emit_NumericMaximum_OfKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'the' 'minimum' (ambiguity) feature=FeatureValue
	 *     (rule start) 'the' 'minimum' (ambiguity) feature=UnscopedFeatureValue
	 *     (rule start) 'the' 'minimum' (ambiguity) feature=VariableFeatureValue
	 */
	protected void emit_NumericMinimum_OfKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'of'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'the' 'sum' (ambiguity) feature=FeatureValue
	 *     (rule start) 'the' 'sum' (ambiguity) feature=UnscopedFeatureValue
	 *     (rule start) 'the' 'sum' (ambiguity) feature=VariableFeatureValue
	 */
	protected void emit_NumericSummation_OfKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('is' 'of' 'type') | ('is' 'a') | ('must' 'be' ('a' | 'in')?)
	 *
	 * This ambiguous syntax occurs at:
	 *     feature=FeatureValue (ambiguity) type=PrimitiveTypes
	 */
	protected void emit_PrimitiveTypeExpression___IsKeyword_1_0_0_OfKeyword_1_0_1_TypeKeyword_1_0_2___or___IsKeyword_1_1_0_AKeyword_1_1_1___or___MustKeyword_1_2_0_BeKeyword_1_2_1___AKeyword_1_2_2_0_or_InKeyword_1_2_2_1__q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'a' | 'an'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) scope=ElementScope
	 */
	protected void emit_ScopedRules_AKeyword_0_1_0_0_or_AnKeyword_0_1_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         ('for' 'all') | 
	  *         'in' | 
	  *         ('in' ('a' | 'an')) | 
	  *         (
	  *             'all' 
	  *             'of' 
	  *             'the' 
	  *             'following' 
	  *             'are' 
	  *             (
	  *                 ('mandatory' 'for') | 
	  *                 ('required' 'for') | 
	  *                 ('needed' 'for') | 
	  *                 ('obligatory' 'for') | 
	  *                 ('mandatory' 'in') | 
	  *                 ('required' 'in') | 
	  *                 ('needed' 'in') | 
	  *                 ('obligatory' 'in')
	  *             ) 
	  *             'a'?
	  *         )
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) scope=ElementScope
	 */
	protected void emit_ScopedRules_InKeyword_0_0_0_1_or___AllKeyword_0_0_0_3_0_OfKeyword_0_0_0_3_1_TheKeyword_0_0_0_3_2_FollowingKeyword_0_0_0_3_3_AreKeyword_0_0_0_3_4_____MandatoryKeyword_0_0_0_3_5_0_0_ForKeyword_0_0_0_3_5_0_1___or___MandatoryKeyword_0_0_0_3_5_4_0_InKeyword_0_0_0_3_5_4_1___or___NeededKeyword_0_0_0_3_5_2_0_ForKeyword_0_0_0_3_5_2_1___or___NeededKeyword_0_0_0_3_5_6_0_InKeyword_0_0_0_3_5_6_1___or___ObligatoryKeyword_0_0_0_3_5_3_0_ForKeyword_0_0_0_3_5_3_1___or___ObligatoryKeyword_0_0_0_3_5_7_0_InKeyword_0_0_0_3_5_7_1___or___RequiredKeyword_0_0_0_3_5_1_0_ForKeyword_0_0_0_3_5_1_1___or___RequiredKeyword_0_0_0_3_5_5_0_InKeyword_0_0_0_3_5_5_1_____AKeyword_0_0_0_3_6_q___or___ForKeyword_0_0_0_0_0_AllKeyword_0_0_0_0_1___or___InKeyword_0_0_0_2_0___AKeyword_0_0_0_2_1_0_or_AnKeyword_0_0_0_2_1_1____(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 */
	protected void emit_TypeValue___LeftCurlyBracketKeyword_1_0_RightCurlyBracketKeyword_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ',' | 'and'
	 *
	 * This ambiguous syntax occurs at:
	 *     features+=FeatureValue (ambiguity) features+=FeatureValue
	 */
	protected void emit_UniquenessCheck_AndKeyword_2_0_1_or_CommaKeyword_2_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('any' 'combination' 'of' 'values' 'in')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) features+=FeatureValue
	 */
	protected void emit_UniquenessCheck___AnyKeyword_0_0_CombinationKeyword_0_1_OfKeyword_0_2_ValuesKeyword_0_3_InKeyword_0_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
