/*
 * generated by Xtext 2.21.0
 */
grammar InternalACMECNl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.eclipse.acme.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.acme.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.acme.services.ACMECNlGrammarAccess;

}
@parser::members {
	private ACMECNlGrammarAccess grammarAccess;

	public void setGrammarAccess(ACMECNlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleConstrainedNaturalLanguageRules
entryRuleConstrainedNaturalLanguageRules
:
{ before(grammarAccess.getConstrainedNaturalLanguageRulesRule()); }
	 ruleConstrainedNaturalLanguageRules
{ after(grammarAccess.getConstrainedNaturalLanguageRulesRule()); } 
	 EOF 
;

// Rule ConstrainedNaturalLanguageRules
ruleConstrainedNaturalLanguageRules 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getGroup()); }
		(rule__ConstrainedNaturalLanguageRules__Group__0)
		{ after(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopedRules
entryRuleScopedRules
:
{ before(grammarAccess.getScopedRulesRule()); }
	 ruleScopedRules
{ after(grammarAccess.getScopedRulesRule()); } 
	 EOF 
;

// Rule ScopedRules
ruleScopedRules 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup()); }
		(rule__ScopedRules__Group__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatchScopedRule
entryRuleMatchScopedRule
:
{ before(grammarAccess.getMatchScopedRuleRule()); }
	 ruleMatchScopedRule
{ after(grammarAccess.getMatchScopedRuleRule()); } 
	 EOF 
;

// Rule MatchScopedRule
ruleMatchScopedRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchScopedRuleAccess().getGroup()); }
		(rule__MatchScopedRule__Group__0)
		{ after(grammarAccess.getMatchScopedRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatchingRule
entryRuleMatchingRule
:
{ before(grammarAccess.getMatchingRuleRule()); }
	 ruleMatchingRule
{ after(grammarAccess.getMatchingRuleRule()); } 
	 EOF 
;

// Rule MatchingRule
ruleMatchingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchingRuleAccess().getAlternatives()); }
		(rule__MatchingRule__Alternatives)
		{ after(grammarAccess.getMatchingRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementScope
entryRuleElementScope
:
{ before(grammarAccess.getElementScopeRule()); }
	 ruleElementScope
{ after(grammarAccess.getElementScopeRule()); } 
	 EOF 
;

// Rule ElementScope
ruleElementScope 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementScopeAccess().getTypeAssignment()); }
		(rule__ElementScope__TypeAssignment)
		{ after(grammarAccess.getElementScopeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getAlternatives()); }
		(rule__Rule__Alternatives)
		{ after(grammarAccess.getRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCNLRule
entryRuleCNLRule
:
{ before(grammarAccess.getCNLRuleRule()); }
	 ruleCNLRule
{ after(grammarAccess.getCNLRuleRule()); } 
	 EOF 
;

// Rule CNLRule
ruleCNLRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCNLRuleAccess().getGroup()); }
		(rule__CNLRule__Group__0)
		{ after(grammarAccess.getCNLRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGPLRule
entryRuleGPLRule
:
{ before(grammarAccess.getGPLRuleRule()); }
	 ruleGPLRule
{ after(grammarAccess.getGPLRuleRule()); } 
	 EOF 
;

// Rule GPLRule
ruleGPLRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGPLRuleAccess().getEOLExpressionRuleParserRuleCall()); }
		ruleEOLExpressionRule
		{ after(grammarAccess.getGPLRuleAccess().getEOLExpressionRuleParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEOLExpressionRule
entryRuleEOLExpressionRule
:
{ before(grammarAccess.getEOLExpressionRuleRule()); }
	 ruleEOLExpressionRule
{ after(grammarAccess.getEOLExpressionRuleRule()); } 
	 EOF 
;

// Rule EOLExpressionRule
ruleEOLExpressionRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEOLExpressionRuleAccess().getGroup()); }
		(rule__EOLExpressionRule__Group__0)
		{ after(grammarAccess.getEOLExpressionRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression
:
{ before(grammarAccess.getLogicalExpressionRule()); }
	 ruleLogicalExpression
{ after(grammarAccess.getLogicalExpressionRule()); } 
	 EOF 
;

// Rule LogicalExpression
ruleLogicalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives()); }
		(rule__LogicalExpression__Alternatives)
		{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression
:
{ before(grammarAccess.getComparisonExpressionRule()); }
	 ruleComparisonExpression
{ after(grammarAccess.getComparisonExpressionRule()); } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives()); }
		(rule__ComparisonExpression__Alternatives)
		{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
		(rule__ArithmeticExpression__Group__0)
		{ after(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseExpression
entryRuleBaseExpression
:
{ before(grammarAccess.getBaseExpressionRule()); }
	 ruleBaseExpression
{ after(grammarAccess.getBaseExpressionRule()); } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
		(rule__BaseExpression__Alternatives)
		{ after(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateExpression
entryRuleDateExpression
:
{ before(grammarAccess.getDateExpressionRule()); }
	 ruleDateExpression
{ after(grammarAccess.getDateExpressionRule()); } 
	 EOF 
;

// Rule DateExpression
ruleDateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateExpressionAccess().getAlternatives()); }
		(rule__DateExpression__Alternatives)
		{ after(grammarAccess.getDateExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericAggregation
entryRuleNumericAggregation
:
{ before(grammarAccess.getNumericAggregationRule()); }
	 ruleNumericAggregation
{ after(grammarAccess.getNumericAggregationRule()); } 
	 EOF 
;

// Rule NumericAggregation
ruleNumericAggregation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericAggregationAccess().getAlternatives()); }
		(rule__NumericAggregation__Alternatives)
		{ after(grammarAccess.getNumericAggregationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericSummation
entryRuleNumericSummation
:
{ before(grammarAccess.getNumericSummationRule()); }
	 ruleNumericSummation
{ after(grammarAccess.getNumericSummationRule()); } 
	 EOF 
;

// Rule NumericSummation
ruleNumericSummation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericSummationAccess().getGroup()); }
		(rule__NumericSummation__Group__0)
		{ after(grammarAccess.getNumericSummationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericAverage
entryRuleNumericAverage
:
{ before(grammarAccess.getNumericAverageRule()); }
	 ruleNumericAverage
{ after(grammarAccess.getNumericAverageRule()); } 
	 EOF 
;

// Rule NumericAverage
ruleNumericAverage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericAverageAccess().getGroup()); }
		(rule__NumericAverage__Group__0)
		{ after(grammarAccess.getNumericAverageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericMaximum
entryRuleNumericMaximum
:
{ before(grammarAccess.getNumericMaximumRule()); }
	 ruleNumericMaximum
{ after(grammarAccess.getNumericMaximumRule()); } 
	 EOF 
;

// Rule NumericMaximum
ruleNumericMaximum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericMaximumAccess().getGroup()); }
		(rule__NumericMaximum__Group__0)
		{ after(grammarAccess.getNumericMaximumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericMinimum
entryRuleNumericMinimum
:
{ before(grammarAccess.getNumericMinimumRule()); }
	 ruleNumericMinimum
{ after(grammarAccess.getNumericMinimumRule()); } 
	 EOF 
;

// Rule NumericMinimum
ruleNumericMinimum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericMinimumAccess().getGroup()); }
		(rule__NumericMinimum__Group__0)
		{ after(grammarAccess.getNumericMinimumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueContainment
entryRuleValueContainment
:
{ before(grammarAccess.getValueContainmentRule()); }
	 ruleValueContainment
{ after(grammarAccess.getValueContainmentRule()); } 
	 EOF 
;

// Rule ValueContainment
ruleValueContainment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueContainmentAccess().getGroup()); }
		(rule__ValueContainment__Group__0)
		{ after(grammarAccess.getValueContainmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUniquenessCheck
entryRuleUniquenessCheck
:
{ before(grammarAccess.getUniquenessCheckRule()); }
	 ruleUniquenessCheck
{ after(grammarAccess.getUniquenessCheckRule()); } 
	 EOF 
;

// Rule UniquenessCheck
ruleUniquenessCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUniquenessCheckAccess().getGroup()); }
		(rule__UniquenessCheck__Group__0)
		{ after(grammarAccess.getUniquenessCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeExpression
entryRuleTypeExpression
:
{ before(grammarAccess.getTypeExpressionRule()); }
	 ruleTypeExpression
{ after(grammarAccess.getTypeExpressionRule()); } 
	 EOF 
;

// Rule TypeExpression
ruleTypeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getAlternatives()); }
		(rule__TypeExpression__Alternatives)
		{ after(grammarAccess.getTypeExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureValue
entryRuleFeatureValue
:
{ before(grammarAccess.getFeatureValueRule()); }
	 ruleFeatureValue
{ after(grammarAccess.getFeatureValueRule()); } 
	 EOF 
;

// Rule FeatureValue
ruleFeatureValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureValueAccess().getGroup()); }
		(rule__FeatureValue__Group__0)
		{ after(grammarAccess.getFeatureValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableFeatureValue
entryRuleVariableFeatureValue
:
{ before(grammarAccess.getVariableFeatureValueRule()); }
	 ruleVariableFeatureValue
{ after(grammarAccess.getVariableFeatureValueRule()); } 
	 EOF 
;

// Rule VariableFeatureValue
ruleVariableFeatureValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableFeatureValueAccess().getGroup()); }
		(rule__VariableFeatureValue__Group__0)
		{ after(grammarAccess.getVariableFeatureValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnscopedFeatureValue
entryRuleUnscopedFeatureValue
:
{ before(grammarAccess.getUnscopedFeatureValueRule()); }
	 ruleUnscopedFeatureValue
{ after(grammarAccess.getUnscopedFeatureValueRule()); } 
	 EOF 
;

// Rule UnscopedFeatureValue
ruleUnscopedFeatureValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnscopedFeatureValueAccess().getGroup()); }
		(rule__UnscopedFeatureValue__Group__0)
		{ after(grammarAccess.getUnscopedFeatureValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveTypeExpression
entryRulePrimitiveTypeExpression
:
{ before(grammarAccess.getPrimitiveTypeExpressionRule()); }
	 rulePrimitiveTypeExpression
{ after(grammarAccess.getPrimitiveTypeExpressionRule()); } 
	 EOF 
;

// Rule PrimitiveTypeExpression
rulePrimitiveTypeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup()); }
		(rule__PrimitiveTypeExpression__Group__0)
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumTypeExpression
entryRuleEnumTypeExpression
:
{ before(grammarAccess.getEnumTypeExpressionRule()); }
	 ruleEnumTypeExpression
{ after(grammarAccess.getEnumTypeExpressionRule()); } 
	 EOF 
;

// Rule EnumTypeExpression
ruleEnumTypeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getGroup()); }
		(rule__EnumTypeExpression__Group__0)
		{ after(grammarAccess.getEnumTypeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
		(rule__StringValue__ValueAssignment)
		{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumValue
entryRuleEnumValue
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumValueAccess().getAlternatives()); }
		(rule__EnumValue__Alternatives)
		{ after(grammarAccess.getEnumValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getGroup()); }
		(rule__BooleanValue__Group__0)
		{ after(grammarAccess.getBooleanValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerValue
entryRuleIntegerValue
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerValueAccess().getValueAssignment()); }
		(rule__IntegerValue__ValueAssignment)
		{ after(grammarAccess.getIntegerValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecimalValue
entryRuleDecimalValue
:
{ before(grammarAccess.getDecimalValueRule()); }
	 ruleDecimalValue
{ after(grammarAccess.getDecimalValueRule()); } 
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalValueAccess().getValueAssignment()); }
		(rule__DecimalValue__ValueAssignment)
		{ after(grammarAccess.getDecimalValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateValue
entryRuleDateValue
:
{ before(grammarAccess.getDateValueRule()); }
	 ruleDateValue
{ after(grammarAccess.getDateValueRule()); } 
	 EOF 
;

// Rule DateValue
ruleDateValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateValueAccess().getValueAssignment()); }
		(rule__DateValue__ValueAssignment)
		{ after(grammarAccess.getDateValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaData
entryRuleMetaData
:
{ before(grammarAccess.getMetaDataRule()); }
	 ruleMetaData
{ after(grammarAccess.getMetaDataRule()); } 
	 EOF 
;

// Rule MetaData
ruleMetaData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaDataAccess().getAlternatives()); }
		(rule__MetaData__Alternatives)
		{ after(grammarAccess.getMetaDataAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypes
entryRuleTypes
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypesAccess().getGroup()); }
		(rule__Types__Group__0)
		{ after(grammarAccess.getTypesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerations
entryRuleEnumerations
:
{ before(grammarAccess.getEnumerationsRule()); }
	 ruleEnumerations
{ after(grammarAccess.getEnumerationsRule()); } 
	 EOF 
;

// Rule Enumerations
ruleEnumerations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationsAccess().getGroup()); }
		(rule__Enumerations__Group__0)
		{ after(grammarAccess.getEnumerationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnum
entryRuleEnum
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumAccess().getNameAssignment()); }
		(rule__Enum__NameAssignment)
		{ after(grammarAccess.getEnumAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeValue
entryRuleTypeValue
:
{ before(grammarAccess.getTypeValueRule()); }
	 ruleTypeValue
{ after(grammarAccess.getTypeValueRule()); } 
	 EOF 
;

// Rule TypeValue
ruleTypeValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeValueAccess().getGroup()); }
		(rule__TypeValue__Group__0)
		{ after(grammarAccess.getTypeValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getNameAssignment()); }
		(rule__Feature__NameAssignment)
		{ after(grammarAccess.getFeatureAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyValue
entryRuleEmptyValue
:
{ before(grammarAccess.getEmptyValueRule()); }
	 ruleEmptyValue
{ after(grammarAccess.getEmptyValueRule()); } 
	 EOF 
;

// Rule EmptyValue
ruleEmptyValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyValueAccess().getGroup()); }
		(rule__EmptyValue__Group__0)
		{ after(grammarAccess.getEmptyValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistanceValue
entryRuleExistanceValue
:
{ before(grammarAccess.getExistanceValueRule()); }
	 ruleExistanceValue
{ after(grammarAccess.getExistanceValueRule()); } 
	 EOF 
;

// Rule ExistanceValue
ruleExistanceValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistanceValueAccess().getGroup()); }
		(rule__ExistanceValue__Group__0)
		{ after(grammarAccess.getExistanceValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ArithmeticOperations
ruleArithmeticOperations
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getAlternatives()); }
		(rule__ArithmeticOperations__Alternatives)
		{ after(grammarAccess.getArithmeticOperationsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PrimitiveTypes
rulePrimitiveTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getAlternatives()); }
		(rule__PrimitiveTypes__Alternatives)
		{ after(grammarAccess.getPrimitiveTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedNaturalLanguageRules__RulesAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesScopedRulesParserRuleCall_0_0_0()); }
		ruleScopedRules
		{ after(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesScopedRulesParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesMatchScopedRuleParserRuleCall_0_0_1()); }
		ruleMatchScopedRule
		{ after(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesMatchScopedRuleParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0()); }
		(rule__ScopedRules__Group_0_0__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_1()); }
		(rule__ScopedRules__Group_0_1__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Alternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_0()); }
		(rule__ScopedRules__Group_0_0_0_0__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_1()); }
		'in'
		{ after(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_2()); }
		(rule__ScopedRules__Group_0_0_0_2__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3()); }
		(rule__ScopedRules__Group_0_0_0_3__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Alternatives_0_0_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getAKeyword_0_0_0_2_1_0()); }
		'a'
		{ after(grammarAccess.getScopedRulesAccess().getAKeyword_0_0_0_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getAnKeyword_0_0_0_2_1_1()); }
		'an'
		{ after(grammarAccess.getScopedRulesAccess().getAnKeyword_0_0_0_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Alternatives_0_0_0_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_0()); }
		(rule__ScopedRules__Group_0_0_0_3_5_0__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_1()); }
		(rule__ScopedRules__Group_0_0_0_3_5_1__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_2()); }
		(rule__ScopedRules__Group_0_0_0_3_5_2__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_3()); }
		(rule__ScopedRules__Group_0_0_0_3_5_3__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_3()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_4()); }
		(rule__ScopedRules__Group_0_0_0_3_5_4__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_4()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_5()); }
		(rule__ScopedRules__Group_0_0_0_3_5_5__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_5()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_6()); }
		(rule__ScopedRules__Group_0_0_0_3_5_6__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_6()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_7()); }
		(rule__ScopedRules__Group_0_0_0_3_5_7__0)
		{ after(grammarAccess.getScopedRulesAccess().getGroup_0_0_0_3_5_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Alternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getAKeyword_0_1_0_0()); }
		'a'
		{ after(grammarAccess.getScopedRulesAccess().getAKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopedRulesAccess().getAnKeyword_0_1_0_1()); }
		'an'
		{ after(grammarAccess.getScopedRulesAccess().getAnKeyword_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchingRuleAccess().getGroup_0()); }
		(rule__MatchingRule__Group_0__0)
		{ after(grammarAccess.getMatchingRuleAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMatchingRuleAccess().getGroup_1()); }
		(rule__MatchingRule__Group_1__0)
		{ after(grammarAccess.getMatchingRuleAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getCNLRuleParserRuleCall_0()); }
		ruleCNLRule
		{ after(grammarAccess.getRuleAccess().getCNLRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getGPLRuleParserRuleCall_1()); }
		ruleGPLRule
		{ after(grammarAccess.getRuleAccess().getGPLRuleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0()); }
		(rule__LogicalExpression__Group_0__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
		(rule__LogicalExpression__Group_1__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_2()); }
		(rule__LogicalExpression__Group_2__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_0()); }
		(rule__LogicalExpression__Group_0_1_0__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_1()); }
		(rule__LogicalExpression__Group_0_1_1__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_2()); }
		(rule__LogicalExpression__Group_0_1_2__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_3()); }
		(rule__LogicalExpression__Group_0_1_3__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_4()); }
		(rule__LogicalExpression__Group_0_1_4__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_5()); }
		(rule__LogicalExpression__Group_0_1_5__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getImpliesKeyword_0_1_0_1_0()); }
		'implies'
		{ after(grammarAccess.getLogicalExpressionAccess().getImpliesKeyword_0_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_0_1_1()); }
		(rule__LogicalExpression__Group_0_1_0_1_1__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getWhenKeyword_0_1_1_1_0()); }
		'when'
		{ after(grammarAccess.getLogicalExpressionAccess().getWhenKeyword_0_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_1_1_1()); }
		'if'
		{ after(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getWhereKeyword_0_1_1_1_2()); }
		'where'
		{ after(grammarAccess.getLogicalExpressionAccess().getWhereKeyword_0_1_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives_0_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getIffKeyword_0_1_5_1_0()); }
		'iff'
		{ after(grammarAccess.getLogicalExpressionAccess().getIffKeyword_0_1_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_5_1_1()); }
		(rule__LogicalExpression__Group_0_1_5_1_1__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup_0_1_5_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getIfKeyword_1_1_0()); }
		'if'
		{ after(grammarAccess.getLogicalExpressionAccess().getIfKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getWhenKeyword_1_1_1()); }
		'when'
		{ after(grammarAccess.getLogicalExpressionAccess().getWhenKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getDateExpressionParserRuleCall_0()); }
		ruleDateExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getDateExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
		(rule__ComparisonExpression__Group_1__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_0()); }
		(rule__ComparisonExpression__Group_1_1_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_1()); }
		(rule__ComparisonExpression__Group_1_1_1__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_2()); }
		(rule__ComparisonExpression__Group_1_1_2__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_3()); }
		(rule__ComparisonExpression__Group_1_1_3__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_4()); }
		(rule__ComparisonExpression__Group_1_1_4__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_5()); }
		(rule__ComparisonExpression__Group_1_1_5__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6()); }
		(rule__ComparisonExpression__Group_1_1_6__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7()); }
		(rule__ComparisonExpression__Group_1_1_7__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_2_1_0()); }
		'equals'
		{ after(grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_2_1_1()); }
		'is'
		{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_2_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_2_1_2()); }
		(rule__ComparisonExpression__Group_1_1_2_1_2__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_2_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_3_1_0()); }
		(rule__ComparisonExpression__Group_1_1_3_1_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_3_1_1()); }
		(rule__ComparisonExpression__Group_1_1_3_1_1__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_3_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_4_1_0_0()); }
		(rule__ComparisonExpression__Group_1_1_4_1_0_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_4_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_4_1_0_1()); }
		'is'
		{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_4_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_5_1_0_0()); }
		(rule__ComparisonExpression__Group_1_1_5_1_0_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_5_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_5_1_0_1()); }
		'is'
		{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_5_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_0()); }
		(rule__ComparisonExpression__Group_1_1_6_1_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_1()); }
		(rule__ComparisonExpression__Group_1_1_6_1_1__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_6_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_0_0_0()); }
		(rule__ComparisonExpression__Group_1_1_6_1_0_0_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_6_1_0_0_1()); }
		'is'
		{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_6_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_6_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_1_0_0()); }
		(rule__ComparisonExpression__Group_1_1_6_1_1_0_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_6_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_6_1_1_0_1()); }
		'is'
		{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_6_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_0()); }
		(rule__ComparisonExpression__Group_1_1_7_1_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_1()); }
		(rule__ComparisonExpression__Group_1_1_7_1_1__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_7_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_0_0_0()); }
		(rule__ComparisonExpression__Group_1_1_7_1_0_0_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_7_1_0_0_1()); }
		'is'
		{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_7_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Alternatives_1_1_7_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_1_0_0()); }
		(rule__ComparisonExpression__Group_1_1_7_1_1_0_0__0)
		{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_7_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_7_1_1_0_1()); }
		'is'
		{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_7_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseExpressionAccess().getTypeExpressionParserRuleCall_0()); }
		ruleTypeExpression
		{ after(grammarAccess.getBaseExpressionAccess().getTypeExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getEmptyValueParserRuleCall_1()); }
		ruleEmptyValue
		{ after(grammarAccess.getBaseExpressionAccess().getEmptyValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getStringValueParserRuleCall_2()); }
		ruleStringValue
		{ after(grammarAccess.getBaseExpressionAccess().getStringValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getEnumValueParserRuleCall_3()); }
		ruleEnumValue
		{ after(grammarAccess.getBaseExpressionAccess().getEnumValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getFeatureValueParserRuleCall_4()); }
		ruleFeatureValue
		{ after(grammarAccess.getBaseExpressionAccess().getFeatureValueParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getUnscopedFeatureValueParserRuleCall_5()); }
		ruleUnscopedFeatureValue
		{ after(grammarAccess.getBaseExpressionAccess().getUnscopedFeatureValueParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getVariableFeatureValueParserRuleCall_6()); }
		ruleVariableFeatureValue
		{ after(grammarAccess.getBaseExpressionAccess().getVariableFeatureValueParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getIntegerValueParserRuleCall_7()); }
		ruleIntegerValue
		{ after(grammarAccess.getBaseExpressionAccess().getIntegerValueParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getDecimalValueParserRuleCall_8()); }
		ruleDecimalValue
		{ after(grammarAccess.getBaseExpressionAccess().getDecimalValueParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getDateValueParserRuleCall_9()); }
		ruleDateValue
		{ after(grammarAccess.getBaseExpressionAccess().getDateValueParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getNumericAggregationParserRuleCall_10()); }
		ruleNumericAggregation
		{ after(grammarAccess.getBaseExpressionAccess().getNumericAggregationParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getBooleanValueParserRuleCall_11()); }
		ruleBooleanValue
		{ after(grammarAccess.getBaseExpressionAccess().getBooleanValueParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getUniquenessCheckParserRuleCall_12()); }
		ruleUniquenessCheck
		{ after(grammarAccess.getBaseExpressionAccess().getUniquenessCheckParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getBaseExpressionAccess().getValueContainmentParserRuleCall_13()); }
		ruleValueContainment
		{ after(grammarAccess.getBaseExpressionAccess().getValueContainmentParserRuleCall_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_0()); }
		(rule__DateExpression__Group_0__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_1()); }
		(rule__DateExpression__Group_1__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_2()); }
		(rule__DateExpression__Group_2__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_3()); }
		(rule__DateExpression__Group_3__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_0_2_0_0()); }
		(rule__DateExpression__Group_0_2_0_0__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_0_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getIsKeyword_0_2_0_1()); }
		'is'
		{ after(grammarAccess.getDateExpressionAccess().getIsKeyword_0_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getBeforeKeyword_0_2_1_0()); }
		'before'
		{ after(grammarAccess.getDateExpressionAccess().getBeforeKeyword_0_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getByKeyword_0_2_1_1()); }
		'by'
		{ after(grammarAccess.getDateExpressionAccess().getByKeyword_0_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_1_2_0_0()); }
		(rule__DateExpression__Group_1_2_0_0__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_1_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getIsKeyword_1_2_0_1()); }
		'is'
		{ after(grammarAccess.getDateExpressionAccess().getIsKeyword_1_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getAfterKeyword_1_2_1_0()); }
		'after'
		{ after(grammarAccess.getDateExpressionAccess().getAfterKeyword_1_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_1_2_1_1()); }
		(rule__DateExpression__Group_1_2_1_1__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_1_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_2_2_0_0()); }
		(rule__DateExpression__Group_2_2_0_0__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_2_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getIsKeyword_2_2_0_1()); }
		'is'
		{ after(grammarAccess.getDateExpressionAccess().getIsKeyword_2_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_2_2_1_0()); }
		(rule__DateExpression__Group_2_2_1_0__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_2_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_2_2_1_1()); }
		(rule__DateExpression__Group_2_2_1_1__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_2_2_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_2_2_1_2()); }
		(rule__DateExpression__Group_2_2_1_2__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_2_2_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_3_2_0_0()); }
		(rule__DateExpression__Group_3_2_0_0__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_3_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getIsKeyword_3_2_0_1()); }
		'is'
		{ after(grammarAccess.getDateExpressionAccess().getIsKeyword_3_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Alternatives_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_3_2_1_0()); }
		(rule__DateExpression__Group_3_2_1_0__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_3_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_3_2_1_1()); }
		(rule__DateExpression__Group_3_2_1_1__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_3_2_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDateExpressionAccess().getGroup_3_2_1_2()); }
		(rule__DateExpression__Group_3_2_1_2__0)
		{ after(grammarAccess.getDateExpressionAccess().getGroup_3_2_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAggregation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericAggregationAccess().getNumericSummationParserRuleCall_0()); }
		ruleNumericSummation
		{ after(grammarAccess.getNumericAggregationAccess().getNumericSummationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericAggregationAccess().getNumericAverageParserRuleCall_1()); }
		ruleNumericAverage
		{ after(grammarAccess.getNumericAggregationAccess().getNumericAverageParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericAggregationAccess().getNumericMaximumParserRuleCall_2()); }
		ruleNumericMaximum
		{ after(grammarAccess.getNumericAggregationAccess().getNumericMaximumParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getNumericAggregationAccess().getNumericMinimumParserRuleCall_3()); }
		ruleNumericMinimum
		{ after(grammarAccess.getNumericAggregationAccess().getNumericMinimumParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__FeatureAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericSummationAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getNumericSummationAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericSummationAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
		ruleUnscopedFeatureValue
		{ after(grammarAccess.getNumericSummationAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericSummationAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
		ruleVariableFeatureValue
		{ after(grammarAccess.getNumericSummationAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__FeatureAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericAverageAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getNumericAverageAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericAverageAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
		ruleUnscopedFeatureValue
		{ after(grammarAccess.getNumericAverageAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericAverageAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
		ruleVariableFeatureValue
		{ after(grammarAccess.getNumericAverageAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__FeatureAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericMaximumAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getNumericMaximumAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericMaximumAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
		ruleUnscopedFeatureValue
		{ after(grammarAccess.getNumericMaximumAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericMaximumAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
		ruleVariableFeatureValue
		{ after(grammarAccess.getNumericMaximumAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__FeatureAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericMinimumAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getNumericMinimumAccess().getFeatureFeatureValueParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericMinimumAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
		ruleUnscopedFeatureValue
		{ after(grammarAccess.getNumericMinimumAccess().getFeatureUnscopedFeatureValueParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericMinimumAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
		ruleVariableFeatureValue
		{ after(grammarAccess.getNumericMinimumAccess().getFeatureVariableFeatureValueParserRuleCall_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__FeatureAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueContainmentAccess().getFeatureFeatureValueParserRuleCall_0_0_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getValueContainmentAccess().getFeatureFeatureValueParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueContainmentAccess().getFeatureUnscopedFeatureValueParserRuleCall_0_0_1()); }
		ruleUnscopedFeatureValue
		{ after(grammarAccess.getValueContainmentAccess().getFeatureUnscopedFeatureValueParserRuleCall_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueContainmentAccess().getFeatureVariableFeatureValueParserRuleCall_0_0_2()); }
		ruleVariableFeatureValue
		{ after(grammarAccess.getValueContainmentAccess().getFeatureVariableFeatureValueParserRuleCall_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniquenessCheckAccess().getCommaKeyword_2_0_0()); }
		','
		{ after(grammarAccess.getUniquenessCheckAccess().getCommaKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUniquenessCheckAccess().getAndKeyword_2_0_1()); }
		'and'
		{ after(grammarAccess.getUniquenessCheckAccess().getAndKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getPrimitiveTypeExpressionParserRuleCall_0()); }
		rulePrimitiveTypeExpression
		{ after(grammarAccess.getTypeExpressionAccess().getPrimitiveTypeExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeExpressionAccess().getEnumTypeExpressionParserRuleCall_1()); }
		ruleEnumTypeExpression
		{ after(grammarAccess.getTypeExpressionAccess().getEnumTypeExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup_1_0()); }
		(rule__PrimitiveTypeExpression__Group_1_0__0)
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup_1_1()); }
		(rule__PrimitiveTypeExpression__Group_1_1__0)
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup_1_2()); }
		(rule__PrimitiveTypeExpression__Group_1_2__0)
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Alternatives_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getAKeyword_1_2_2_0()); }
		'a'
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getAKeyword_1_2_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getInKeyword_1_2_2_1()); }
		'in'
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getInKeyword_1_2_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getGroup_1_0()); }
		(rule__EnumTypeExpression__Group_1_0__0)
		{ after(grammarAccess.getEnumTypeExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getGroup_1_1()); }
		(rule__EnumTypeExpression__Group_1_1__0)
		{ after(grammarAccess.getEnumTypeExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getGroup_1_2()); }
		(rule__EnumTypeExpression__Group_1_2__0)
		{ after(grammarAccess.getEnumTypeExpressionAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Alternatives_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getAKeyword_1_2_2_0()); }
		'a'
		{ after(grammarAccess.getEnumTypeExpressionAccess().getAKeyword_1_2_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getInKeyword_1_2_2_1()); }
		'in'
		{ after(grammarAccess.getEnumTypeExpressionAccess().getInKeyword_1_2_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getGroup_0()); }
		(rule__EnumValue__Group_0__0)
		{ after(grammarAccess.getEnumValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumValueAccess().getGroup_1()); }
		(rule__EnumValue__Group_1__0)
		{ after(grammarAccess.getEnumValueAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValueAssignment_1_0()); }
		(rule__BooleanValue__ValueAssignment_1_0)
		{ after(grammarAccess.getBooleanValueAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanValueAccess().getFalseKeyword_1_1()); }
		'false'
		{ after(grammarAccess.getBooleanValueAccess().getFalseKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaDataAccess().getTypesParserRuleCall_0()); }
		ruleTypes
		{ after(grammarAccess.getMetaDataAccess().getTypesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaDataAccess().getEnumerationsParserRuleCall_1()); }
		ruleEnumerations
		{ after(grammarAccess.getMetaDataAccess().getEnumerationsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistanceValue__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistanceValueAccess().getExistsKeyword_1_0()); }
		'exists'
		{ after(grammarAccess.getExistanceValueAccess().getExistsKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistanceValueAccess().getGroup_1_1()); }
		(rule__ExistanceValue__Group_1_1__0)
		{ after(grammarAccess.getExistanceValueAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperations__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getPlusEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getArithmeticOperationsAccess().getPlusEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getMinusEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getArithmeticOperationsAccess().getMinusEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getTimesEnumLiteralDeclaration_2()); }
		('*')
		{ after(grammarAccess.getArithmeticOperationsAccess().getTimesEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticOperationsAccess().getDivEnumLiteralDeclaration_3()); }
		('/')
		{ after(grammarAccess.getArithmeticOperationsAccess().getDivEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getStringEnumLiteralDeclaration_0()); }
		('String')
		{ after(grammarAccess.getPrimitiveTypesAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getBooleanEnumLiteralDeclaration_1()); }
		('Boolean')
		{ after(grammarAccess.getPrimitiveTypesAccess().getBooleanEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getIntegerEnumLiteralDeclaration_2()); }
		('Integer')
		{ after(grammarAccess.getPrimitiveTypesAccess().getIntegerEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getDecimalEnumLiteralDeclaration_3()); }
		('Decimal')
		{ after(grammarAccess.getPrimitiveTypesAccess().getDecimalEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypesAccess().getDateEnumLiteralDeclaration_4()); }
		('Date')
		{ after(grammarAccess.getPrimitiveTypesAccess().getDateEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedNaturalLanguageRules__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedNaturalLanguageRules__Group__0__Impl
	rule__ConstrainedNaturalLanguageRules__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedNaturalLanguageRules__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesAssignment_0()); }
	(rule__ConstrainedNaturalLanguageRules__RulesAssignment_0)*
	{ after(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedNaturalLanguageRules__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainedNaturalLanguageRules__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedNaturalLanguageRules__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getMetadataAssignment_1()); }
	(rule__ConstrainedNaturalLanguageRules__MetadataAssignment_1)*
	{ after(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getMetadataAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group__0__Impl
	rule__ScopedRules__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAlternatives_0()); }
	(rule__ScopedRules__Alternatives_0)
	{ after(grammarAccess.getScopedRulesAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getScopedRulesAccess().getRulesAssignment_1()); }
		(rule__ScopedRules__RulesAssignment_1)
		{ after(grammarAccess.getScopedRulesAccess().getRulesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getScopedRulesAccess().getRulesAssignment_1()); }
		(rule__ScopedRules__RulesAssignment_1)*
		{ after(grammarAccess.getScopedRulesAccess().getRulesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0__0__Impl
	rule__ScopedRules__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAlternatives_0_0_0()); }
	(rule__ScopedRules__Alternatives_0_0_0)
	{ after(grammarAccess.getScopedRulesAccess().getAlternatives_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getScopeAssignment_0_0_1()); }
	(rule__ScopedRules__ScopeAssignment_0_0_1)
	{ after(grammarAccess.getScopedRulesAccess().getScopeAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_0__0__Impl
	rule__ScopedRules__Group_0_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_0_0()); }
	'for'
	{ after(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAllKeyword_0_0_0_0_1()); }
	'all'
	{ after(grammarAccess.getScopedRulesAccess().getAllKeyword_0_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_2__0__Impl
	rule__ScopedRules__Group_0_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_2_0()); }
	'in'
	{ after(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAlternatives_0_0_0_2_1()); }
	(rule__ScopedRules__Alternatives_0_0_0_2_1)
	{ after(grammarAccess.getScopedRulesAccess().getAlternatives_0_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3__0__Impl
	rule__ScopedRules__Group_0_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAllKeyword_0_0_0_3_0()); }
	'all'
	{ after(grammarAccess.getScopedRulesAccess().getAllKeyword_0_0_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3__1__Impl
	rule__ScopedRules__Group_0_0_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getOfKeyword_0_0_0_3_1()); }
	'of'
	{ after(grammarAccess.getScopedRulesAccess().getOfKeyword_0_0_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3__2__Impl
	rule__ScopedRules__Group_0_0_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getTheKeyword_0_0_0_3_2()); }
	'the'
	{ after(grammarAccess.getScopedRulesAccess().getTheKeyword_0_0_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3__3__Impl
	rule__ScopedRules__Group_0_0_0_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getFollowingKeyword_0_0_0_3_3()); }
	'following'
	{ after(grammarAccess.getScopedRulesAccess().getFollowingKeyword_0_0_0_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3__4__Impl
	rule__ScopedRules__Group_0_0_0_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAreKeyword_0_0_0_3_4()); }
	'are'
	{ after(grammarAccess.getScopedRulesAccess().getAreKeyword_0_0_0_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3__5__Impl
	rule__ScopedRules__Group_0_0_0_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAlternatives_0_0_0_3_5()); }
	(rule__ScopedRules__Alternatives_0_0_0_3_5)
	{ after(grammarAccess.getScopedRulesAccess().getAlternatives_0_0_0_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAKeyword_0_0_0_3_6()); }
	('a')?
	{ after(grammarAccess.getScopedRulesAccess().getAKeyword_0_0_0_3_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_0__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getMandatoryKeyword_0_0_0_3_5_0_0()); }
	'mandatory'
	{ after(grammarAccess.getScopedRulesAccess().getMandatoryKeyword_0_0_0_3_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_0_1()); }
	'for'
	{ after(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_1__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getRequiredKeyword_0_0_0_3_5_1_0()); }
	'required'
	{ after(grammarAccess.getScopedRulesAccess().getRequiredKeyword_0_0_0_3_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_1_1()); }
	'for'
	{ after(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_2__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getNeededKeyword_0_0_0_3_5_2_0()); }
	'needed'
	{ after(grammarAccess.getScopedRulesAccess().getNeededKeyword_0_0_0_3_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_2_1()); }
	'for'
	{ after(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_3__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getObligatoryKeyword_0_0_0_3_5_3_0()); }
	'obligatory'
	{ after(grammarAccess.getScopedRulesAccess().getObligatoryKeyword_0_0_0_3_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_3_1()); }
	'for'
	{ after(grammarAccess.getScopedRulesAccess().getForKeyword_0_0_0_3_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_4__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getMandatoryKeyword_0_0_0_3_5_4_0()); }
	'mandatory'
	{ after(grammarAccess.getScopedRulesAccess().getMandatoryKeyword_0_0_0_3_5_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_4_1()); }
	'in'
	{ after(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_5__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getRequiredKeyword_0_0_0_3_5_5_0()); }
	'required'
	{ after(grammarAccess.getScopedRulesAccess().getRequiredKeyword_0_0_0_3_5_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_5_1()); }
	'in'
	{ after(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_6__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getNeededKeyword_0_0_0_3_5_6_0()); }
	'needed'
	{ after(grammarAccess.getScopedRulesAccess().getNeededKeyword_0_0_0_3_5_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_6_1()); }
	'in'
	{ after(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_0_0_3_5_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_7__0__Impl
	rule__ScopedRules__Group_0_0_0_3_5_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getObligatoryKeyword_0_0_0_3_5_7_0()); }
	'obligatory'
	{ after(grammarAccess.getScopedRulesAccess().getObligatoryKeyword_0_0_0_3_5_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_0_0_3_5_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_0_0_3_5_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_7_1()); }
	'in'
	{ after(grammarAccess.getScopedRulesAccess().getInKeyword_0_0_0_3_5_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedRules__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_1__0__Impl
	rule__ScopedRules__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getAlternatives_0_1_0()); }
	(rule__ScopedRules__Alternatives_0_1_0)
	{ after(grammarAccess.getScopedRulesAccess().getAlternatives_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_1__1__Impl
	rule__ScopedRules__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getScopeAssignment_0_1_1()); }
	(rule__ScopedRules__ScopeAssignment_0_1_1)
	{ after(grammarAccess.getScopedRulesAccess().getScopeAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedRules__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedRulesAccess().getIsKeyword_0_1_2()); }
	'is'
	{ after(grammarAccess.getScopedRulesAccess().getIsKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MatchScopedRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchScopedRule__Group__0__Impl
	rule__MatchScopedRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchScopedRuleAccess().getFindKeyword_0()); }
	'find'
	{ after(grammarAccess.getMatchScopedRuleAccess().getFindKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchScopedRule__Group__1__Impl
	rule__MatchScopedRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMatchScopedRuleAccess().getMatchesAssignment_1()); }
		(rule__MatchScopedRule__MatchesAssignment_1)
		{ after(grammarAccess.getMatchScopedRuleAccess().getMatchesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getMatchScopedRuleAccess().getMatchesAssignment_1()); }
		(rule__MatchScopedRule__MatchesAssignment_1)*
		{ after(grammarAccess.getMatchScopedRuleAccess().getMatchesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchScopedRule__Group__2__Impl
	rule__MatchScopedRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchScopedRuleAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getMatchScopedRuleAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchScopedRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchScopedRuleAccess().getRuleAssignment_3()); }
	(rule__MatchScopedRule__RuleAssignment_3)
	{ after(grammarAccess.getMatchScopedRuleAccess().getRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_0__0__Impl
	rule__MatchingRule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getVariableNameAssignment_0_0()); }
	(rule__MatchingRule__VariableNameAssignment_0_0)
	{ after(grammarAccess.getMatchingRuleAccess().getVariableNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_0__1__Impl
	rule__MatchingRule__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getInKeyword_0_1()); }
	'in'
	{ after(grammarAccess.getMatchingRuleAccess().getInKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_0__2__Impl
	rule__MatchingRule__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getScopeAssignment_0_2()); }
	(rule__MatchingRule__ScopeAssignment_0_2)
	{ after(grammarAccess.getMatchingRuleAccess().getScopeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_0__3__Impl
	rule__MatchingRule__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getWhereKeyword_0_3()); }
	'where'
	{ after(grammarAccess.getMatchingRuleAccess().getWhereKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getAstRootAssignment_0_4()); }
	(rule__MatchingRule__AstRootAssignment_0_4)
	{ after(grammarAccess.getMatchingRuleAccess().getAstRootAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MatchingRule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_1__0__Impl
	rule__MatchingRule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getAllKeyword_1_0()); }
	'all'
	{ after(grammarAccess.getMatchingRuleAccess().getAllKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_1__1__Impl
	rule__MatchingRule__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getDataKeyword_1_1()); }
	'data'
	{ after(grammarAccess.getMatchingRuleAccess().getDataKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_1__2__Impl
	rule__MatchingRule__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getInKeyword_1_2()); }
	'in'
	{ after(grammarAccess.getMatchingRuleAccess().getInKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_1__3__Impl
	rule__MatchingRule__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getScopeAssignment_1_3()); }
	(rule__MatchingRule__ScopeAssignment_1_3)
	{ after(grammarAccess.getMatchingRuleAccess().getScopeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_1__4__Impl
	rule__MatchingRule__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getWhereKeyword_1_4()); }
	'where'
	{ after(grammarAccess.getMatchingRuleAccess().getWhereKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchingRule__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchingRuleAccess().getAstRootAssignment_1_5()); }
	(rule__MatchingRule__AstRootAssignment_1_5)
	{ after(grammarAccess.getMatchingRuleAccess().getAstRootAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CNLRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group__0__Impl
	rule__CNLRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getGroup_0()); }
	(rule__CNLRule__Group_0__0)?
	{ after(grammarAccess.getCNLRuleAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group__1__Impl
	rule__CNLRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getAstRootAssignment_1()); }
	(rule__CNLRule__AstRootAssignment_1)
	{ after(grammarAccess.getCNLRuleAccess().getAstRootAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getGroup_2()); }
	(rule__CNLRule__Group_2__0)?
	{ after(grammarAccess.getCNLRuleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CNLRule__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group_0__0__Impl
	rule__CNLRule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getRuleKeyword_0_0()); }
	'rule'
	{ after(grammarAccess.getCNLRuleAccess().getRuleKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getNameAssignment_0_1()); }
	(rule__CNLRule__NameAssignment_0_1)
	{ after(grammarAccess.getCNLRuleAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CNLRule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group_2__0__Impl
	rule__CNLRule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getErrorKeyword_2_0()); }
	('error')?
	{ after(grammarAccess.getCNLRuleAccess().getErrorKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group_2__1__Impl
	rule__CNLRule__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getMessageKeyword_2_1()); }
	'message'
	{ after(grammarAccess.getCNLRuleAccess().getMessageKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CNLRule__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCNLRuleAccess().getMessageAssignment_2_2()); }
	(rule__CNLRule__MessageAssignment_2_2)
	{ after(grammarAccess.getCNLRuleAccess().getMessageAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOLExpressionRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group__0__Impl
	rule__EOLExpressionRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getGroup_0()); }
	(rule__EOLExpressionRule__Group_0__0)?
	{ after(grammarAccess.getEOLExpressionRuleAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group__1__Impl
	rule__EOLExpressionRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getEOLExpressionKeyword_1()); }
	'<EOLExpression>'
	{ after(grammarAccess.getEOLExpressionRuleAccess().getEOLExpressionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group__2__Impl
	rule__EOLExpressionRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getCodeAssignment_2()); }
	(rule__EOLExpressionRule__CodeAssignment_2)
	{ after(grammarAccess.getEOLExpressionRuleAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group__3__Impl
	rule__EOLExpressionRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getEOLExpressionKeyword_3()); }
	'</EOLExpression>'
	{ after(grammarAccess.getEOLExpressionRuleAccess().getEOLExpressionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getGroup_4()); }
	(rule__EOLExpressionRule__Group_4__0)?
	{ after(grammarAccess.getEOLExpressionRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOLExpressionRule__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group_0__0__Impl
	rule__EOLExpressionRule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getRuleKeyword_0_0()); }
	'rule'
	{ after(grammarAccess.getEOLExpressionRuleAccess().getRuleKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getNameAssignment_0_1()); }
	(rule__EOLExpressionRule__NameAssignment_0_1)
	{ after(grammarAccess.getEOLExpressionRuleAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EOLExpressionRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group_4__0__Impl
	rule__EOLExpressionRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getErrorKeyword_4_0()); }
	('error')?
	{ after(grammarAccess.getEOLExpressionRuleAccess().getErrorKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group_4__1__Impl
	rule__EOLExpressionRule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getMessageKeyword_4_1()); }
	'message'
	{ after(grammarAccess.getEOLExpressionRuleAccess().getMessageKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EOLExpressionRule__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEOLExpressionRuleAccess().getMessageAssignment_4_2()); }
	(rule__EOLExpressionRule__MessageAssignment_4_2)
	{ after(grammarAccess.getEOLExpressionRuleAccess().getMessageAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0__0__Impl
	rule__LogicalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getComparisonExpressionParserRuleCall_0_0()); }
	ruleComparisonExpression
	{ after(grammarAccess.getLogicalExpressionAccess().getComparisonExpressionParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1()); }
	(rule__LogicalExpression__Alternatives_0_1)*
	{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_0__0__Impl
	rule__LogicalExpression__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getImpliesExpressionLhsAction_0_1_0_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getImpliesExpressionLhsAction_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_0__1__Impl
	rule__LogicalExpression__Group_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1_0_1()); }
	(rule__LogicalExpression__Alternatives_0_1_0_1)
	{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_0_2()); }
	(rule__LogicalExpression__RhsAssignment_0_1_0_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_0_1_1__0__Impl
	rule__LogicalExpression__Group_0_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getOnlyKeyword_0_1_0_1_1_0()); }
	'only'
	{ after(grammarAccess.getLogicalExpressionAccess().getOnlyKeyword_0_1_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_0_1_1_1()); }
	'if'
	{ after(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_1__0__Impl
	rule__LogicalExpression__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getImpliesExpressionRhsAction_0_1_1_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getImpliesExpressionRhsAction_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_1__1__Impl
	rule__LogicalExpression__Group_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1_1_1()); }
	(rule__LogicalExpression__Alternatives_0_1_1_1)
	{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLhsAssignment_0_1_1_2()); }
	(rule__LogicalExpression__LhsAssignment_0_1_1_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getLhsAssignment_0_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_2__0__Impl
	rule__LogicalExpression__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getOrExpressionLhsAction_0_1_2_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getOrExpressionLhsAction_0_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_2__1__Impl
	rule__LogicalExpression__Group_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getOrKeyword_0_1_2_1()); }
	'or'
	{ after(grammarAccess.getLogicalExpressionAccess().getOrKeyword_0_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_2_2()); }
	(rule__LogicalExpression__RhsAssignment_0_1_2_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_3__0__Impl
	rule__LogicalExpression__Group_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getXorExpressionLhsAction_0_1_3_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getXorExpressionLhsAction_0_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_3__1__Impl
	rule__LogicalExpression__Group_0_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getXorKeyword_0_1_3_1()); }
	'xor'
	{ after(grammarAccess.getLogicalExpressionAccess().getXorKeyword_0_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_3_2()); }
	(rule__LogicalExpression__RhsAssignment_0_1_3_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_4__0__Impl
	rule__LogicalExpression__Group_0_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAndExpressionLhsAction_0_1_4_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getAndExpressionLhsAction_0_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_4__1__Impl
	rule__LogicalExpression__Group_0_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAndKeyword_0_1_4_1()); }
	'and'
	{ after(grammarAccess.getLogicalExpressionAccess().getAndKeyword_0_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_4_2()); }
	(rule__LogicalExpression__RhsAssignment_0_1_4_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_5__0__Impl
	rule__LogicalExpression__Group_0_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getIfandonlyifExpressionLhsAction_0_1_5_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getIfandonlyifExpressionLhsAction_0_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_5__1__Impl
	rule__LogicalExpression__Group_0_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1_5_1()); }
	(rule__LogicalExpression__Alternatives_0_1_5_1)
	{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives_0_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_5_2()); }
	(rule__LogicalExpression__RhsAssignment_0_1_5_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_0_1_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_0_1_5_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_5_1_1__0__Impl
	rule__LogicalExpression__Group_0_1_5_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_5_1_1_0()); }
	'if'
	{ after(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_5_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_5_1_1__1__Impl
	rule__LogicalExpression__Group_0_1_5_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAndKeyword_0_1_5_1_1_1()); }
	'and'
	{ after(grammarAccess.getLogicalExpressionAccess().getAndKeyword_0_1_5_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_5_1_1__2__Impl
	rule__LogicalExpression__Group_0_1_5_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getOnlyKeyword_0_1_5_1_1_2()); }
	'only'
	{ after(grammarAccess.getLogicalExpressionAccess().getOnlyKeyword_0_1_5_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_0_1_5_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_0_1_5_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_5_1_1_3()); }
	'if'
	{ after(grammarAccess.getLogicalExpressionAccess().getIfKeyword_0_1_5_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__0__Impl
	rule__LogicalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getImpliesExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getImpliesExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__1__Impl
	rule__LogicalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getAlternatives_1_1()); }
	(rule__LogicalExpression__Alternatives_1_1)
	{ after(grammarAccess.getLogicalExpressionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__2__Impl
	rule__LogicalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getTheKeyword_1_2()); }
	('the')?
	{ after(grammarAccess.getLogicalExpressionAccess().getTheKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__3__Impl
	rule__LogicalExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLhsAssignment_1_3()); }
	(rule__LogicalExpression__LhsAssignment_1_3)
	{ after(grammarAccess.getLogicalExpressionAccess().getLhsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__4__Impl
	rule__LogicalExpression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getThenKeyword_1_4()); }
	'then'
	{ after(grammarAccess.getLogicalExpressionAccess().getThenKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_1_5()); }
	(rule__LogicalExpression__RhsAssignment_1_5)
	{ after(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_2__0__Impl
	rule__LogicalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getXorExpressionAction_2_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getXorExpressionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_2__1__Impl
	rule__LogicalExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getEitherKeyword_2_1()); }
	'either'
	{ after(grammarAccess.getLogicalExpressionAccess().getEitherKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_2__2__Impl
	rule__LogicalExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLhsAssignment_2_2()); }
	(rule__LogicalExpression__LhsAssignment_2_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getLhsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_2__3__Impl
	rule__LogicalExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getOrKeyword_2_3()); }
	'or'
	{ after(grammarAccess.getLogicalExpressionAccess().getOrKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_2_4()); }
	(rule__LogicalExpression__RhsAssignment_2_4)
	{ after(grammarAccess.getLogicalExpressionAccess().getRhsAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__0__Impl
	rule__ComparisonExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getArithmeticExpressionParserRuleCall_1_0()); }
	ruleArithmeticExpression
	{ after(grammarAccess.getComparisonExpressionAccess().getArithmeticExpressionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1()); }
	(rule__ComparisonExpression__Alternatives_1_1)*
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_0__0__Impl
	rule__ComparisonExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getEqualityExpressionLhsAction_1_1_0_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getEqualityExpressionLhsAction_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_0_1()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_0_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_1__0__Impl
	rule__ComparisonExpression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getNegatedEqualityExpressionLhsAction_1_1_1_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getNegatedEqualityExpressionLhsAction_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_1_1()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_1_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_2__0__Impl
	rule__ComparisonExpression__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getEqualityExpressionLhsAction_1_1_2_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getEqualityExpressionLhsAction_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_2__1__Impl
	rule__ComparisonExpression__Group_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_2_1()); }
	(rule__ComparisonExpression__Alternatives_1_1_2_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_2_2()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_2_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_2_1_2__0__Impl
	rule__ComparisonExpression__Group_1_1_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_2_1_2_0()); }
	'must'
	{ after(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_2_1_2_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_3__0__Impl
	rule__ComparisonExpression__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getNegatedEqualityExpressionLhsAction_1_1_3_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getNegatedEqualityExpressionLhsAction_1_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_3__1__Impl
	rule__ComparisonExpression__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_3_1()); }
	(rule__ComparisonExpression__Alternatives_1_1_3_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_3_2()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_3_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_3_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_3_1_0__0__Impl
	rule__ComparisonExpression__Group_1_1_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_3_1_0_0()); }
	'is'
	{ after(grammarAccess.getComparisonExpressionAccess().getIsKeyword_1_1_3_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_3_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getNotKeyword_1_1_3_1_0_1()); }
	'not'
	{ after(grammarAccess.getComparisonExpressionAccess().getNotKeyword_1_1_3_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_3_1_1__0__Impl
	rule__ComparisonExpression__Group_1_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getCannotKeyword_1_1_3_1_1_0()); }
	'cannot'
	{ after(grammarAccess.getComparisonExpressionAccess().getCannotKeyword_1_1_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_3_1_1_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4__0__Impl
	rule__ComparisonExpression__Group_1_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGreaterThanExpressionLhsAction_1_1_4_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getGreaterThanExpressionLhsAction_1_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4__1__Impl
	rule__ComparisonExpression__Group_1_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_4_1()); }
	(rule__ComparisonExpression__Group_1_1_4_1__0)
	{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_4_2()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_4_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4_1__0__Impl
	rule__ComparisonExpression__Group_1_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_4_1_0()); }
	(rule__ComparisonExpression__Alternatives_1_1_4_1_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4_1__1__Impl
	rule__ComparisonExpression__Group_1_1_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_4_1_1()); }
	'greater'
	{ after(grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_4_1_2()); }
	'than'
	{ after(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_4_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4_1_0_0__0__Impl
	rule__ComparisonExpression__Group_1_1_4_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_4_1_0_0_0()); }
	'must'
	{ after(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_4_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_4_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_4_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_4_1_0_0_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_4_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5__0__Impl
	rule__ComparisonExpression__Group_1_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLessThanExpressionLhsAction_1_1_5_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getLessThanExpressionLhsAction_1_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5__1__Impl
	rule__ComparisonExpression__Group_1_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_5_1()); }
	(rule__ComparisonExpression__Group_1_1_5_1__0)
	{ after(grammarAccess.getComparisonExpressionAccess().getGroup_1_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_5_2()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_5_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5_1__0__Impl
	rule__ComparisonExpression__Group_1_1_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_5_1_0()); }
	(rule__ComparisonExpression__Alternatives_1_1_5_1_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5_1__1__Impl
	rule__ComparisonExpression__Group_1_1_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_5_1_1()); }
	'less'
	{ after(grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_5_1_2()); }
	'than'
	{ after(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_5_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_5_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5_1_0_0__0__Impl
	rule__ComparisonExpression__Group_1_1_5_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_5_1_0_0_0()); }
	'must'
	{ after(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_5_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_5_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_5_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_5_1_0_0_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_5_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6__0__Impl
	rule__ComparisonExpression__Group_1_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGTEExpressionLhsAction_1_1_6_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getGTEExpressionLhsAction_1_1_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6__1__Impl
	rule__ComparisonExpression__Group_1_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_6_1()); }
	(rule__ComparisonExpression__Alternatives_1_1_6_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_6_2()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_6_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_6_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0__0__Impl
	rule__ComparisonExpression__Group_1_1_6_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_6_1_0_0()); }
	(rule__ComparisonExpression__Alternatives_1_1_6_1_0_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_6_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0__1__Impl
	rule__ComparisonExpression__Group_1_1_6_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_6_1_0_1()); }
	'greater'
	{ after(grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_6_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0__2__Impl
	rule__ComparisonExpression__Group_1_1_6_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_6_1_0_2()); }
	'than'
	{ after(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_6_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0__3__Impl
	rule__ComparisonExpression__Group_1_1_6_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_6_1_0_3()); }
	'or'
	{ after(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_6_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0__4__Impl
	rule__ComparisonExpression__Group_1_1_6_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getEqualKeyword_1_1_6_1_0_4()); }
	'equal'
	{ after(grammarAccess.getComparisonExpressionAccess().getEqualKeyword_1_1_6_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getToKeyword_1_1_6_1_0_5()); }
	'to'
	{ after(grammarAccess.getComparisonExpressionAccess().getToKeyword_1_1_6_1_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_6_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0_0_0__0__Impl
	rule__ComparisonExpression__Group_1_1_6_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_6_1_0_0_0_0()); }
	'must'
	{ after(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_6_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_6_1_0_0_0_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_6_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_6_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_1__0__Impl
	rule__ComparisonExpression__Group_1_1_6_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_6_1_1_0()); }
	(rule__ComparisonExpression__Alternatives_1_1_6_1_1_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_6_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_1__1__Impl
	rule__ComparisonExpression__Group_1_1_6_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_6_1_1_1()); }
	'greater'
	{ after(grammarAccess.getComparisonExpressionAccess().getGreaterKeyword_1_1_6_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_1__2__Impl
	rule__ComparisonExpression__Group_1_1_6_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_6_1_1_2()); }
	'than'
	{ after(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_6_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_1__3__Impl
	rule__ComparisonExpression__Group_1_1_6_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_6_1_1_3()); }
	'or'
	{ after(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_6_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_6_1_1_4()); }
	'equals'
	{ after(grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_6_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_6_1_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_1_0_0__0__Impl
	rule__ComparisonExpression__Group_1_1_6_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_6_1_1_0_0_0()); }
	'must'
	{ after(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_6_1_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_6_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_6_1_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_6_1_1_0_0_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_6_1_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7__0__Impl
	rule__ComparisonExpression__Group_1_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLTEExpressionLhsAction_1_1_7_0()); }
	()
	{ after(grammarAccess.getComparisonExpressionAccess().getLTEExpressionLhsAction_1_1_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7__1__Impl
	rule__ComparisonExpression__Group_1_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_7_1()); }
	(rule__ComparisonExpression__Alternatives_1_1_7_1)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_7_2()); }
	(rule__ComparisonExpression__RhsAssignment_1_1_7_2)
	{ after(grammarAccess.getComparisonExpressionAccess().getRhsAssignment_1_1_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_7_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0__0__Impl
	rule__ComparisonExpression__Group_1_1_7_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_7_1_0_0()); }
	(rule__ComparisonExpression__Alternatives_1_1_7_1_0_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_7_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0__1__Impl
	rule__ComparisonExpression__Group_1_1_7_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_7_1_0_1()); }
	'less'
	{ after(grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_7_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0__2__Impl
	rule__ComparisonExpression__Group_1_1_7_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_7_1_0_2()); }
	'than'
	{ after(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_7_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0__3__Impl
	rule__ComparisonExpression__Group_1_1_7_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_7_1_0_3()); }
	'or'
	{ after(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_7_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0__4__Impl
	rule__ComparisonExpression__Group_1_1_7_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getEqualKeyword_1_1_7_1_0_4()); }
	'equal'
	{ after(grammarAccess.getComparisonExpressionAccess().getEqualKeyword_1_1_7_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getToKeyword_1_1_7_1_0_5()); }
	'to'
	{ after(grammarAccess.getComparisonExpressionAccess().getToKeyword_1_1_7_1_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_7_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0_0_0__0__Impl
	rule__ComparisonExpression__Group_1_1_7_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_7_1_0_0_0_0()); }
	'must'
	{ after(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_7_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_7_1_0_0_0_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_7_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_7_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_1__0__Impl
	rule__ComparisonExpression__Group_1_1_7_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_7_1_1_0()); }
	(rule__ComparisonExpression__Alternatives_1_1_7_1_1_0)
	{ after(grammarAccess.getComparisonExpressionAccess().getAlternatives_1_1_7_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_1__1__Impl
	rule__ComparisonExpression__Group_1_1_7_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_7_1_1_1()); }
	'less'
	{ after(grammarAccess.getComparisonExpressionAccess().getLessKeyword_1_1_7_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_1__2__Impl
	rule__ComparisonExpression__Group_1_1_7_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_7_1_1_2()); }
	'than'
	{ after(grammarAccess.getComparisonExpressionAccess().getThanKeyword_1_1_7_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_1__3__Impl
	rule__ComparisonExpression__Group_1_1_7_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_7_1_1_3()); }
	'or'
	{ after(grammarAccess.getComparisonExpressionAccess().getOrKeyword_1_1_7_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_7_1_1_4()); }
	'equals'
	{ after(grammarAccess.getComparisonExpressionAccess().getEqualsKeyword_1_1_7_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExpression__Group_1_1_7_1_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_1_0_0__0__Impl
	rule__ComparisonExpression__Group_1_1_7_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_7_1_1_0_0_0()); }
	'must'
	{ after(grammarAccess.getComparisonExpressionAccess().getMustKeyword_1_1_7_1_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExpression__Group_1_1_7_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__Group_1_1_7_1_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_7_1_1_0_0_1()); }
	'be'
	{ after(grammarAccess.getComparisonExpressionAccess().getBeKeyword_1_1_7_1_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__0__Impl
	rule__ArithmeticExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getBaseExpressionParserRuleCall_0()); }
	ruleBaseExpression
	{ after(grammarAccess.getArithmeticExpressionAccess().getBaseExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
	(rule__ArithmeticExpression__Group_1__0)*
	{ after(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__0__Impl
	rule__ArithmeticExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionLhsAction_1_0()); }
	()
	{ after(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__1__Impl
	rule__ArithmeticExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getTypeAssignment_1_1()); }
	(rule__ArithmeticExpression__TypeAssignment_1_1)
	{ after(grammarAccess.getArithmeticExpressionAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getRhsAssignment_1_2()); }
	(rule__ArithmeticExpression__RhsAssignment_1_2)
	{ after(grammarAccess.getArithmeticExpressionAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0__0__Impl
	rule__DateExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeforeDateExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getDateExpressionAccess().getBeforeDateExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0__1__Impl
	rule__DateExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getLhsAssignment_0_1()); }
	(rule__DateExpression__LhsAssignment_0_1)
	{ after(grammarAccess.getDateExpressionAccess().getLhsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0__2__Impl
	rule__DateExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getGroup_0_2()); }
	(rule__DateExpression__Group_0_2__0)
	{ after(grammarAccess.getDateExpressionAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getRhsAssignment_0_3()); }
	(rule__DateExpression__RhsAssignment_0_3)
	{ after(grammarAccess.getDateExpressionAccess().getRhsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0_2__0__Impl
	rule__DateExpression__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_0_2_0()); }
	(rule__DateExpression__Alternatives_0_2_0)?
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_0_2_1()); }
	(rule__DateExpression__Alternatives_0_2_1)
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_0_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0_2_0_0__0__Impl
	rule__DateExpression__Group_0_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getMustKeyword_0_2_0_0_0()); }
	'must'
	{ after(grammarAccess.getDateExpressionAccess().getMustKeyword_0_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_0_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_0_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeKeyword_0_2_0_0_1()); }
	'be'
	{ after(grammarAccess.getDateExpressionAccess().getBeKeyword_0_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1__0__Impl
	rule__DateExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAfterDateExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getDateExpressionAccess().getAfterDateExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1__1__Impl
	rule__DateExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getLhsAssignment_1_1()); }
	(rule__DateExpression__LhsAssignment_1_1)
	{ after(grammarAccess.getDateExpressionAccess().getLhsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1__2__Impl
	rule__DateExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getGroup_1_2()); }
	(rule__DateExpression__Group_1_2__0)
	{ after(grammarAccess.getDateExpressionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getRhsAssignment_1_3()); }
	(rule__DateExpression__RhsAssignment_1_3)
	{ after(grammarAccess.getDateExpressionAccess().getRhsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1_2__0__Impl
	rule__DateExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_1_2_0()); }
	(rule__DateExpression__Alternatives_1_2_0)?
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_1_2_1()); }
	(rule__DateExpression__Alternatives_1_2_1)
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_1_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1_2_0_0__0__Impl
	rule__DateExpression__Group_1_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getMustKeyword_1_2_0_0_0()); }
	'must'
	{ after(grammarAccess.getDateExpressionAccess().getMustKeyword_1_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeKeyword_1_2_0_0_1()); }
	'be'
	{ after(grammarAccess.getDateExpressionAccess().getBeKeyword_1_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_1_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1_2_1_1__0__Impl
	rule__DateExpression__Group_1_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getLaterKeyword_1_2_1_1_0()); }
	'later'
	{ after(grammarAccess.getDateExpressionAccess().getLaterKeyword_1_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_1_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_1_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getThanKeyword_1_2_1_1_1()); }
	'than'
	{ after(grammarAccess.getDateExpressionAccess().getThanKeyword_1_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2__0__Impl
	rule__DateExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOnorbeforeDateExpressionAction_2_0()); }
	()
	{ after(grammarAccess.getDateExpressionAccess().getOnorbeforeDateExpressionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2__1__Impl
	rule__DateExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getLhsAssignment_2_1()); }
	(rule__DateExpression__LhsAssignment_2_1)
	{ after(grammarAccess.getDateExpressionAccess().getLhsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2__2__Impl
	rule__DateExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getGroup_2_2()); }
	(rule__DateExpression__Group_2_2__0)
	{ after(grammarAccess.getDateExpressionAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getRhsAssignment_2_3()); }
	(rule__DateExpression__RhsAssignment_2_3)
	{ after(grammarAccess.getDateExpressionAccess().getRhsAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2__0__Impl
	rule__DateExpression__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_2_2_0()); }
	(rule__DateExpression__Alternatives_2_2_0)?
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_2_2_1()); }
	(rule__DateExpression__Alternatives_2_2_1)
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_2_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_0_0__0__Impl
	rule__DateExpression__Group_2_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getMustKeyword_2_2_0_0_0()); }
	'must'
	{ after(grammarAccess.getDateExpressionAccess().getMustKeyword_2_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeKeyword_2_2_0_0_1()); }
	'be'
	{ after(grammarAccess.getDateExpressionAccess().getBeKeyword_2_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_2_2_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_0__0__Impl
	rule__DateExpression__Group_2_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_0_0()); }
	'before'
	{ after(grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_0__1__Impl
	rule__DateExpression__Group_2_2_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_0_1()); }
	'or'
	{ after(grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getByKeyword_2_2_1_0_2()); }
	'by'
	{ after(grammarAccess.getDateExpressionAccess().getByKeyword_2_2_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_2_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_1__0__Impl
	rule__DateExpression__Group_2_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOnKeyword_2_2_1_1_0()); }
	'on'
	{ after(grammarAccess.getDateExpressionAccess().getOnKeyword_2_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_1__1__Impl
	rule__DateExpression__Group_2_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_1_1()); }
	'or'
	{ after(grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_1_2()); }
	'before'
	{ after(grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_2_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_2__0__Impl
	rule__DateExpression__Group_2_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_2_0()); }
	'before'
	{ after(grammarAccess.getDateExpressionAccess().getBeforeKeyword_2_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_2__1__Impl
	rule__DateExpression__Group_2_2_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_2_1()); }
	'or'
	{ after(grammarAccess.getDateExpressionAccess().getOrKeyword_2_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_2__2__Impl
	rule__DateExpression__Group_2_2_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getEqualKeyword_2_2_1_2_2()); }
	'equal'
	{ after(grammarAccess.getDateExpressionAccess().getEqualKeyword_2_2_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_2_2_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_2_2_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getToKeyword_2_2_1_2_3()); }
	'to'
	{ after(grammarAccess.getDateExpressionAccess().getToKeyword_2_2_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3__0__Impl
	rule__DateExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOnorafterDateExpressionAction_3_0()); }
	()
	{ after(grammarAccess.getDateExpressionAccess().getOnorafterDateExpressionAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3__1__Impl
	rule__DateExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getLhsAssignment_3_1()); }
	(rule__DateExpression__LhsAssignment_3_1)
	{ after(grammarAccess.getDateExpressionAccess().getLhsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3__2__Impl
	rule__DateExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getGroup_3_2()); }
	(rule__DateExpression__Group_3_2__0)
	{ after(grammarAccess.getDateExpressionAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getRhsAssignment_3_3()); }
	(rule__DateExpression__RhsAssignment_3_3)
	{ after(grammarAccess.getDateExpressionAccess().getRhsAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2__0__Impl
	rule__DateExpression__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_3_2_0()); }
	(rule__DateExpression__Alternatives_3_2_0)?
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAlternatives_3_2_1()); }
	(rule__DateExpression__Alternatives_3_2_1)
	{ after(grammarAccess.getDateExpressionAccess().getAlternatives_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_3_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_0_0__0__Impl
	rule__DateExpression__Group_3_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getMustKeyword_3_2_0_0_0()); }
	'must'
	{ after(grammarAccess.getDateExpressionAccess().getMustKeyword_3_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getBeKeyword_3_2_0_0_1()); }
	'be'
	{ after(grammarAccess.getDateExpressionAccess().getBeKeyword_3_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_3_2_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_0__0__Impl
	rule__DateExpression__Group_3_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_0_0()); }
	'after'
	{ after(grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_0__1__Impl
	rule__DateExpression__Group_3_2_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_0_1()); }
	'or'
	{ after(grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getByKeyword_3_2_1_0_2()); }
	'by'
	{ after(grammarAccess.getDateExpressionAccess().getByKeyword_3_2_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_3_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_1__0__Impl
	rule__DateExpression__Group_3_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOnKeyword_3_2_1_1_0()); }
	'on'
	{ after(grammarAccess.getDateExpressionAccess().getOnKeyword_3_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_1__1__Impl
	rule__DateExpression__Group_3_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_1_1()); }
	'or'
	{ after(grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_1_2()); }
	'after'
	{ after(grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateExpression__Group_3_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_2__0__Impl
	rule__DateExpression__Group_3_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_2_0()); }
	'after'
	{ after(grammarAccess.getDateExpressionAccess().getAfterKeyword_3_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_2__1__Impl
	rule__DateExpression__Group_3_2_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_2_1()); }
	'or'
	{ after(grammarAccess.getDateExpressionAccess().getOrKeyword_3_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_2__2__Impl
	rule__DateExpression__Group_3_2_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getEqualKeyword_3_2_1_2_2()); }
	'equal'
	{ after(grammarAccess.getDateExpressionAccess().getEqualKeyword_3_2_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateExpression__Group_3_2_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__Group_3_2_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateExpressionAccess().getToKeyword_3_2_1_2_3()); }
	'to'
	{ after(grammarAccess.getDateExpressionAccess().getToKeyword_3_2_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericSummation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericSummation__Group__0__Impl
	rule__NumericSummation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericSummationAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getNumericSummationAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericSummation__Group__1__Impl
	rule__NumericSummation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericSummationAccess().getSumKeyword_1()); }
	'sum'
	{ after(grammarAccess.getNumericSummationAccess().getSumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericSummation__Group__2__Impl
	rule__NumericSummation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericSummationAccess().getOfKeyword_2()); }
	('of')?
	{ after(grammarAccess.getNumericSummationAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericSummation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericSummationAccess().getFeatureAssignment_3()); }
	(rule__NumericSummation__FeatureAssignment_3)
	{ after(grammarAccess.getNumericSummationAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericAverage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericAverage__Group__0__Impl
	rule__NumericAverage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericAverageAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getNumericAverageAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericAverage__Group__1__Impl
	rule__NumericAverage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericAverageAccess().getAverageKeyword_1()); }
	'average'
	{ after(grammarAccess.getNumericAverageAccess().getAverageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericAverage__Group__2__Impl
	rule__NumericAverage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericAverageAccess().getOfKeyword_2()); }
	('of')?
	{ after(grammarAccess.getNumericAverageAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericAverage__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericAverageAccess().getFeatureAssignment_3()); }
	(rule__NumericAverage__FeatureAssignment_3)
	{ after(grammarAccess.getNumericAverageAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericMaximum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMaximum__Group__0__Impl
	rule__NumericMaximum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMaximumAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getNumericMaximumAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMaximum__Group__1__Impl
	rule__NumericMaximum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMaximumAccess().getMaximumKeyword_1()); }
	'maximum'
	{ after(grammarAccess.getNumericMaximumAccess().getMaximumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMaximum__Group__2__Impl
	rule__NumericMaximum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMaximumAccess().getOfKeyword_2()); }
	('of')?
	{ after(grammarAccess.getNumericMaximumAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMaximum__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMaximumAccess().getFeatureAssignment_3()); }
	(rule__NumericMaximum__FeatureAssignment_3)
	{ after(grammarAccess.getNumericMaximumAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericMinimum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMinimum__Group__0__Impl
	rule__NumericMinimum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMinimumAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getNumericMinimumAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMinimum__Group__1__Impl
	rule__NumericMinimum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMinimumAccess().getMinimumKeyword_1()); }
	'minimum'
	{ after(grammarAccess.getNumericMinimumAccess().getMinimumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMinimum__Group__2__Impl
	rule__NumericMinimum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMinimumAccess().getOfKeyword_2()); }
	('of')?
	{ after(grammarAccess.getNumericMinimumAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericMinimum__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericMinimumAccess().getFeatureAssignment_3()); }
	(rule__NumericMinimum__FeatureAssignment_3)
	{ after(grammarAccess.getNumericMinimumAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueContainment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group__0__Impl
	rule__ValueContainment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getFeatureAssignment_0()); }
	(rule__ValueContainment__FeatureAssignment_0)
	{ after(grammarAccess.getValueContainmentAccess().getFeatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group__1__Impl
	rule__ValueContainment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getGroup_1()); }
	(rule__ValueContainment__Group_1__0)
	{ after(grammarAccess.getValueContainmentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group__2__Impl
	rule__ValueContainment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getCollectionAssignment_2()); }
	(rule__ValueContainment__CollectionAssignment_2)
	{ after(grammarAccess.getValueContainmentAccess().getCollectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getGroup_3()); }
	(rule__ValueContainment__Group_3__0)*
	{ after(grammarAccess.getValueContainmentAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueContainment__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group_1__0__Impl
	rule__ValueContainment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getIsKeyword_1_0()); }
	'is'
	{ after(grammarAccess.getValueContainmentAccess().getIsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getEitherKeyword_1_1()); }
	'either'
	{ after(grammarAccess.getValueContainmentAccess().getEitherKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueContainment__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group_3__0__Impl
	rule__ValueContainment__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getOrKeyword_3_0()); }
	'or'
	{ after(grammarAccess.getValueContainmentAccess().getOrKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueContainment__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueContainmentAccess().getCollectionAssignment_3_1()); }
	(rule__ValueContainment__CollectionAssignment_3_1)
	{ after(grammarAccess.getValueContainmentAccess().getCollectionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniquenessCheck__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group__0__Impl
	rule__UniquenessCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getGroup_0()); }
	(rule__UniquenessCheck__Group_0__0)?
	{ after(grammarAccess.getUniquenessCheckAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group__1__Impl
	rule__UniquenessCheck__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getFeaturesAssignment_1()); }
	(rule__UniquenessCheck__FeaturesAssignment_1)
	{ after(grammarAccess.getUniquenessCheckAccess().getFeaturesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group__2__Impl
	rule__UniquenessCheck__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getGroup_2()); }
	(rule__UniquenessCheck__Group_2__0)*
	{ after(grammarAccess.getUniquenessCheckAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group__3__Impl
	rule__UniquenessCheck__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getMustKeyword_3()); }
	'must'
	{ after(grammarAccess.getUniquenessCheckAccess().getMustKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group__4__Impl
	rule__UniquenessCheck__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getBeKeyword_4()); }
	'be'
	{ after(grammarAccess.getUniquenessCheckAccess().getBeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getUniqueKeyword_5()); }
	'unique'
	{ after(grammarAccess.getUniquenessCheckAccess().getUniqueKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniquenessCheck__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group_0__0__Impl
	rule__UniquenessCheck__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getAnyKeyword_0_0()); }
	'any'
	{ after(grammarAccess.getUniquenessCheckAccess().getAnyKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group_0__1__Impl
	rule__UniquenessCheck__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getCombinationKeyword_0_1()); }
	'combination'
	{ after(grammarAccess.getUniquenessCheckAccess().getCombinationKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group_0__2__Impl
	rule__UniquenessCheck__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getOfKeyword_0_2()); }
	'of'
	{ after(grammarAccess.getUniquenessCheckAccess().getOfKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group_0__3__Impl
	rule__UniquenessCheck__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getValuesKeyword_0_3()); }
	'values'
	{ after(grammarAccess.getUniquenessCheckAccess().getValuesKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getInKeyword_0_4()); }
	'in'
	{ after(grammarAccess.getUniquenessCheckAccess().getInKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniquenessCheck__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group_2__0__Impl
	rule__UniquenessCheck__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getAlternatives_2_0()); }
	(rule__UniquenessCheck__Alternatives_2_0)
	{ after(grammarAccess.getUniquenessCheckAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniquenessCheck__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniquenessCheckAccess().getFeaturesAssignment_2_1()); }
	(rule__UniquenessCheck__FeaturesAssignment_2_1)
	{ after(grammarAccess.getUniquenessCheckAccess().getFeaturesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureValue__Group__0__Impl
	rule__FeatureValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureValueAccess().getTheKeyword_0()); }
	('the')?
	{ after(grammarAccess.getFeatureValueAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureValueAccess().getFeatureAssignment_1()); }
	(rule__FeatureValue__FeatureAssignment_1)
	{ after(grammarAccess.getFeatureValueAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableFeatureValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFeatureValue__Group__0__Impl
	rule__VariableFeatureValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFeatureValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFeatureValueAccess().getFeatureAssignment_0()); }
	(rule__VariableFeatureValue__FeatureAssignment_0)
	{ after(grammarAccess.getVariableFeatureValueAccess().getFeatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFeatureValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFeatureValue__Group__1__Impl
	rule__VariableFeatureValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFeatureValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFeatureValueAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getVariableFeatureValueAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFeatureValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFeatureValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFeatureValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFeatureValueAccess().getVariableNameAssignment_2()); }
	(rule__VariableFeatureValue__VariableNameAssignment_2)
	{ after(grammarAccess.getVariableFeatureValueAccess().getVariableNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnscopedFeatureValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnscopedFeatureValue__Group__0__Impl
	rule__UnscopedFeatureValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnscopedFeatureValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnscopedFeatureValueAccess().getFeatureAssignment_0()); }
	(rule__UnscopedFeatureValue__FeatureAssignment_0)
	{ after(grammarAccess.getUnscopedFeatureValueAccess().getFeatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnscopedFeatureValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnscopedFeatureValue__Group__1__Impl
	rule__UnscopedFeatureValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnscopedFeatureValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnscopedFeatureValueAccess().getOfKeyword_1()); }
	'of'
	{ after(grammarAccess.getUnscopedFeatureValueAccess().getOfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnscopedFeatureValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnscopedFeatureValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnscopedFeatureValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnscopedFeatureValueAccess().getScopeAssignment_2()); }
	(rule__UnscopedFeatureValue__ScopeAssignment_2)
	{ after(grammarAccess.getUnscopedFeatureValueAccess().getScopeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveTypeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group__0__Impl
	rule__PrimitiveTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getFeatureAssignment_0()); }
	(rule__PrimitiveTypeExpression__FeatureAssignment_0)
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getFeatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group__1__Impl
	rule__PrimitiveTypeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getAlternatives_1()); }
	(rule__PrimitiveTypeExpression__Alternatives_1)
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getTypeAssignment_2()); }
	(rule__PrimitiveTypeExpression__TypeAssignment_2)
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveTypeExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_0__0__Impl
	rule__PrimitiveTypeExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getIsKeyword_1_0_0()); }
	'is'
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getIsKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_0__1__Impl
	rule__PrimitiveTypeExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getOfKeyword_1_0_1()); }
	'of'
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getOfKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getTypeKeyword_1_0_2()); }
	'type'
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getTypeKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveTypeExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_1__0__Impl
	rule__PrimitiveTypeExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getIsKeyword_1_1_0()); }
	'is'
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getIsKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getAKeyword_1_1_1()); }
	'a'
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getAKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveTypeExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_2__0__Impl
	rule__PrimitiveTypeExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getMustKeyword_1_2_0()); }
	'must'
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getMustKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_2__1__Impl
	rule__PrimitiveTypeExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getBeKeyword_1_2_1()); }
	'be'
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getBeKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveTypeExpression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getAlternatives_1_2_2()); }
	(rule__PrimitiveTypeExpression__Alternatives_1_2_2)?
	{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getAlternatives_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group__0__Impl
	rule__EnumTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getFeatureAssignment_0()); }
	(rule__EnumTypeExpression__FeatureAssignment_0)
	{ after(grammarAccess.getEnumTypeExpressionAccess().getFeatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group__1__Impl
	rule__EnumTypeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getAlternatives_1()); }
	(rule__EnumTypeExpression__Alternatives_1)
	{ after(grammarAccess.getEnumTypeExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getTypeAssignment_2()); }
	(rule__EnumTypeExpression__TypeAssignment_2)
	{ after(grammarAccess.getEnumTypeExpressionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_0__0__Impl
	rule__EnumTypeExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getIsKeyword_1_0_0()); }
	'is'
	{ after(grammarAccess.getEnumTypeExpressionAccess().getIsKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_0__1__Impl
	rule__EnumTypeExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getOfKeyword_1_0_1()); }
	'of'
	{ after(grammarAccess.getEnumTypeExpressionAccess().getOfKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getTypeKeyword_1_0_2()); }
	'type'
	{ after(grammarAccess.getEnumTypeExpressionAccess().getTypeKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_1__0__Impl
	rule__EnumTypeExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getIsKeyword_1_1_0()); }
	'is'
	{ after(grammarAccess.getEnumTypeExpressionAccess().getIsKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getAKeyword_1_1_1()); }
	'a'
	{ after(grammarAccess.getEnumTypeExpressionAccess().getAKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_2__0__Impl
	rule__EnumTypeExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getMustKeyword_1_2_0()); }
	'must'
	{ after(grammarAccess.getEnumTypeExpressionAccess().getMustKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_2__1__Impl
	rule__EnumTypeExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getBeKeyword_1_2_1()); }
	'be'
	{ after(grammarAccess.getEnumTypeExpressionAccess().getBeKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExpression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExpressionAccess().getAlternatives_1_2_2()); }
	(rule__EnumTypeExpression__Alternatives_1_2_2)?
	{ after(grammarAccess.getEnumTypeExpressionAccess().getAlternatives_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_0__0__Impl
	rule__EnumValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getEnumerationAssignment_0_0()); }
	(rule__EnumValue__EnumerationAssignment_0_0)
	{ after(grammarAccess.getEnumValueAccess().getEnumerationAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_0__1__Impl
	rule__EnumValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getEnumValueAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getValueAssignment_0_2()); }
	(rule__EnumValue__ValueAssignment_0_2)
	{ after(grammarAccess.getEnumValueAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_1__0__Impl
	rule__EnumValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getTheKeyword_1_0()); }
	'the'
	{ after(grammarAccess.getEnumValueAccess().getTheKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_1__1__Impl
	rule__EnumValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getEnumerationAssignment_1_1()); }
	(rule__EnumValue__EnumerationAssignment_1_1)
	{ after(grammarAccess.getEnumValueAccess().getEnumerationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_1__2__Impl
	rule__EnumValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getValueKeyword_1_2()); }
	'value'
	{ after(grammarAccess.getEnumValueAccess().getValueKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_1__3__Impl
	rule__EnumValue__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getOfKeyword_1_3()); }
	'of'
	{ after(grammarAccess.getEnumValueAccess().getOfKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getValueAssignment_1_4()); }
	(rule__EnumValue__ValueAssignment_1_4)
	{ after(grammarAccess.getEnumValueAccess().getValueAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValue__Group__0__Impl
	rule__BooleanValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAction_0()); }
	()
	{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueAccess().getAlternatives_1()); }
	(rule__BooleanValue__Alternatives_1)
	{ after(grammarAccess.getBooleanValueAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group__0__Impl
	rule__Types__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getTypesKeyword_0()); }
	'types'
	{ after(grammarAccess.getTypesAccess().getTypesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group__1__Impl
	rule__Types__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getLegalValuesAssignment_1()); }
	(rule__Types__LegalValuesAssignment_1)
	{ after(grammarAccess.getTypesAccess().getLegalValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getGroup_2()); }
	(rule__Types__Group_2__0)*
	{ after(grammarAccess.getTypesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Types__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_2__0__Impl
	rule__Types__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTypesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Types__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypesAccess().getLegalValuesAssignment_2_1()); }
	(rule__Types__LegalValuesAssignment_2_1)
	{ after(grammarAccess.getTypesAccess().getLegalValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerations__Group__0__Impl
	rule__Enumerations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationsAccess().getEnumerationsKeyword_0()); }
	'enumerations'
	{ after(grammarAccess.getEnumerationsAccess().getEnumerationsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerations__Group__1__Impl
	rule__Enumerations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationsAccess().getLegalValuesAssignment_1()); }
	(rule__Enumerations__LegalValuesAssignment_1)
	{ after(grammarAccess.getEnumerationsAccess().getLegalValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerations__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationsAccess().getGroup_2()); }
	(rule__Enumerations__Group_2__0)*
	{ after(grammarAccess.getEnumerationsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerations__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerations__Group_2__0__Impl
	rule__Enumerations__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getEnumerationsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerations__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationsAccess().getLegalValuesAssignment_2_1()); }
	(rule__Enumerations__LegalValuesAssignment_2_1)
	{ after(grammarAccess.getEnumerationsAccess().getLegalValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group__0__Impl
	rule__TypeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getNameAssignment_0()); }
	(rule__TypeValue__NameAssignment_0)
	{ after(grammarAccess.getTypeValueAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getGroup_1()); }
	(rule__TypeValue__Group_1__0)?
	{ after(grammarAccess.getTypeValueAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group_1__0__Impl
	rule__TypeValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getTypeValueAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group_1__1__Impl
	rule__TypeValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getGroup_1_1()); }
	(rule__TypeValue__Group_1_1__0)?
	{ after(grammarAccess.getTypeValueAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getTypeValueAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeValue__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group_1_1__0__Impl
	rule__TypeValue__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getFeaturesAssignment_1_1_0()); }
	(rule__TypeValue__FeaturesAssignment_1_1_0)
	{ after(grammarAccess.getTypeValueAccess().getFeaturesAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getGroup_1_1_1()); }
	(rule__TypeValue__Group_1_1_1__0)*
	{ after(grammarAccess.getTypeValueAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeValue__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group_1_1_1__0__Impl
	rule__TypeValue__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getCommaKeyword_1_1_1_0()); }
	','
	{ after(grammarAccess.getTypeValueAccess().getCommaKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeValue__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeValueAccess().getFeaturesAssignment_1_1_1_1()); }
	(rule__TypeValue__FeaturesAssignment_1_1_1_1)
	{ after(grammarAccess.getTypeValueAccess().getFeaturesAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyValue__Group__0__Impl
	rule__EmptyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyValueAccess().getEmptyValueAction_0()); }
	()
	{ after(grammarAccess.getEmptyValueAccess().getEmptyValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyValue__Group__1__Impl
	rule__EmptyValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyValueAccess().getGroup_1()); }
	(rule__EmptyValue__Group_1__0)?
	{ after(grammarAccess.getEmptyValueAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyValueAccess().getEmptyKeyword_2()); }
	'empty'
	{ after(grammarAccess.getEmptyValueAccess().getEmptyKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyValue__Group_1__0__Impl
	rule__EmptyValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyValueAccess().getMustKeyword_1_0()); }
	'must'
	{ after(grammarAccess.getEmptyValueAccess().getMustKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyValueAccess().getBeKeyword_1_1()); }
	'be'
	{ after(grammarAccess.getEmptyValueAccess().getBeKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistanceValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistanceValue__Group__0__Impl
	rule__ExistanceValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistanceValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistanceValueAccess().getExistanceValueAction_0()); }
	()
	{ after(grammarAccess.getExistanceValueAccess().getExistanceValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistanceValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistanceValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistanceValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistanceValueAccess().getAlternatives_1()); }
	(rule__ExistanceValue__Alternatives_1)
	{ after(grammarAccess.getExistanceValueAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistanceValue__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistanceValue__Group_1_1__0__Impl
	rule__ExistanceValue__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistanceValue__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistanceValueAccess().getMustKeyword_1_1_0()); }
	'must'
	{ after(grammarAccess.getExistanceValueAccess().getMustKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistanceValue__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistanceValue__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistanceValue__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistanceValueAccess().getExistKeyword_1_1_1()); }
	'exist'
	{ after(grammarAccess.getExistanceValueAccess().getExistKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstrainedNaturalLanguageRules__RulesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesAlternatives_0_0()); }
		(rule__ConstrainedNaturalLanguageRules__RulesAlternatives_0_0)
		{ after(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getRulesAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainedNaturalLanguageRules__MetadataAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getMetadataMetaDataParserRuleCall_1_0()); }
		ruleMetaData
		{ after(grammarAccess.getConstrainedNaturalLanguageRulesAccess().getMetadataMetaDataParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__ScopeAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getScopeElementScopeParserRuleCall_0_0_1_0()); }
		ruleElementScope
		{ after(grammarAccess.getScopedRulesAccess().getScopeElementScopeParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__ScopeAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getScopeElementScopeParserRuleCall_0_1_1_0()); }
		ruleElementScope
		{ after(grammarAccess.getScopedRulesAccess().getScopeElementScopeParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedRules__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedRulesAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getScopedRulesAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__MatchesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchScopedRuleAccess().getMatchesMatchingRuleParserRuleCall_1_0()); }
		ruleMatchingRule
		{ after(grammarAccess.getMatchScopedRuleAccess().getMatchesMatchingRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchScopedRule__RuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchScopedRuleAccess().getRuleRuleParserRuleCall_3_0()); }
		ruleRule
		{ after(grammarAccess.getMatchScopedRuleAccess().getRuleRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__VariableNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchingRuleAccess().getVariableNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMatchingRuleAccess().getVariableNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__ScopeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchingRuleAccess().getScopeElementScopeParserRuleCall_0_2_0()); }
		ruleElementScope
		{ after(grammarAccess.getMatchingRuleAccess().getScopeElementScopeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__AstRootAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchingRuleAccess().getAstRootLogicalExpressionParserRuleCall_0_4_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getMatchingRuleAccess().getAstRootLogicalExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__ScopeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchingRuleAccess().getScopeElementScopeParserRuleCall_1_3_0()); }
		ruleElementScope
		{ after(grammarAccess.getMatchingRuleAccess().getScopeElementScopeParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchingRule__AstRootAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchingRuleAccess().getAstRootLogicalExpressionParserRuleCall_1_5_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getMatchingRuleAccess().getAstRootLogicalExpressionParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementScope__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementScopeAccess().getTypeTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getElementScopeAccess().getTypeTypeIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getElementScopeAccess().getTypeTypeIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getElementScopeAccess().getTypeTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCNLRuleAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCNLRuleAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__AstRootAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCNLRuleAccess().getAstRootLogicalExpressionParserRuleCall_1_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getCNLRuleAccess().getAstRootLogicalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CNLRule__MessageAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCNLRuleAccess().getMessageSTRINGTerminalRuleCall_2_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCNLRuleAccess().getMessageSTRINGTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOLExpressionRuleAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEOLExpressionRuleAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOLExpressionRuleAccess().getCodeSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEOLExpressionRuleAccess().getCodeSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EOLExpressionRule__MessageAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEOLExpressionRuleAccess().getMessageSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEOLExpressionRuleAccess().getMessageSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RhsAssignment_0_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_0_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__LhsAssignment_0_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getLhsComparisonExpressionParserRuleCall_0_1_1_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getLhsComparisonExpressionParserRuleCall_0_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RhsAssignment_0_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_2_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RhsAssignment_0_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_3_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RhsAssignment_0_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_4_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RhsAssignment_0_1_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_5_2_0()); }
		ruleComparisonExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getRhsComparisonExpressionParserRuleCall_0_1_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__LhsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getLhsLogicalExpressionParserRuleCall_1_3_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getLhsLogicalExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RhsAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRhsLogicalExpressionParserRuleCall_1_5_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getRhsLogicalExpressionParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__LhsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getLhsLogicalExpressionParserRuleCall_2_2_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getLhsLogicalExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RhsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRhsLogicalExpressionParserRuleCall_2_4_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getRhsLogicalExpressionParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsExistanceValueParserRuleCall_1_1_0_1_0()); }
		ruleExistanceValue
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsExistanceValueParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsEmptyValueParserRuleCall_1_1_1_1_0()); }
		ruleEmptyValue
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsEmptyValueParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_2_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_3_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_4_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_5_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_6_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExpression__RhsAssignment_1_1_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_7_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getComparisonExpressionAccess().getRhsArithmeticExpressionParserRuleCall_1_1_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getTypeArithmeticOperationsEnumRuleCall_1_1_0()); }
		ruleArithmeticOperations
		{ after(grammarAccess.getArithmeticExpressionAccess().getTypeArithmeticOperationsEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getRhsBaseExpressionParserRuleCall_1_2_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getArithmeticExpressionAccess().getRhsBaseExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__LhsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_0_1_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__RhsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_0_3_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__LhsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_1_1_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__RhsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_1_3_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__LhsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_2_1_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__RhsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_2_3_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__LhsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_3_1_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getLhsBaseExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateExpression__RhsAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_3_3_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getDateExpressionAccess().getRhsBaseExpressionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericSummation__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericSummationAccess().getFeatureAlternatives_3_0()); }
		(rule__NumericSummation__FeatureAlternatives_3_0)
		{ after(grammarAccess.getNumericSummationAccess().getFeatureAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAverage__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericAverageAccess().getFeatureAlternatives_3_0()); }
		(rule__NumericAverage__FeatureAlternatives_3_0)
		{ after(grammarAccess.getNumericAverageAccess().getFeatureAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMaximum__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericMaximumAccess().getFeatureAlternatives_3_0()); }
		(rule__NumericMaximum__FeatureAlternatives_3_0)
		{ after(grammarAccess.getNumericMaximumAccess().getFeatureAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericMinimum__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericMinimumAccess().getFeatureAlternatives_3_0()); }
		(rule__NumericMinimum__FeatureAlternatives_3_0)
		{ after(grammarAccess.getNumericMinimumAccess().getFeatureAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__FeatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueContainmentAccess().getFeatureAlternatives_0_0()); }
		(rule__ValueContainment__FeatureAlternatives_0_0)
		{ after(grammarAccess.getValueContainmentAccess().getFeatureAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__CollectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueContainmentAccess().getCollectionBaseExpressionParserRuleCall_2_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getValueContainmentAccess().getCollectionBaseExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueContainment__CollectionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueContainmentAccess().getCollectionBaseExpressionParserRuleCall_3_1_0()); }
		ruleBaseExpression
		{ after(grammarAccess.getValueContainmentAccess().getCollectionBaseExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__FeaturesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniquenessCheckAccess().getFeaturesFeatureValueParserRuleCall_1_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getUniquenessCheckAccess().getFeaturesFeatureValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniquenessCheck__FeaturesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniquenessCheckAccess().getFeaturesFeatureValueParserRuleCall_2_1_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getUniquenessCheckAccess().getFeaturesFeatureValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureValue__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureValueAccess().getFeatureFeatureCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFeatureValueAccess().getFeatureFeatureIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFeatureValueAccess().getFeatureFeatureIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFeatureValueAccess().getFeatureFeatureCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFeatureValue__FeatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableFeatureValueAccess().getFeatureFeatureCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVariableFeatureValueAccess().getFeatureFeatureIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableFeatureValueAccess().getFeatureFeatureIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVariableFeatureValueAccess().getFeatureFeatureCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFeatureValue__VariableNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableFeatureValueAccess().getVariableNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableFeatureValueAccess().getVariableNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnscopedFeatureValue__FeatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnscopedFeatureValueAccess().getFeatureFeatureCrossReference_0_0()); }
		(
			{ before(grammarAccess.getUnscopedFeatureValueAccess().getFeatureFeatureIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnscopedFeatureValueAccess().getFeatureFeatureIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getUnscopedFeatureValueAccess().getFeatureFeatureCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnscopedFeatureValue__ScopeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnscopedFeatureValueAccess().getScopeElementScopeParserRuleCall_2_0()); }
		ruleElementScope
		{ after(grammarAccess.getUnscopedFeatureValueAccess().getScopeElementScopeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__FeatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getFeatureFeatureValueParserRuleCall_0_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getFeatureFeatureValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeExpression__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeExpressionAccess().getTypePrimitiveTypesEnumRuleCall_2_0()); }
		rulePrimitiveTypes
		{ after(grammarAccess.getPrimitiveTypeExpressionAccess().getTypePrimitiveTypesEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__FeatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getFeatureFeatureValueParserRuleCall_0_0()); }
		ruleFeatureValue
		{ after(grammarAccess.getEnumTypeExpressionAccess().getFeatureFeatureValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExpression__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeExpressionAccess().getTypeEnumCrossReference_2_0()); }
		(
			{ before(grammarAccess.getEnumTypeExpressionAccess().getTypeEnumIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnumTypeExpressionAccess().getTypeEnumIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getEnumTypeExpressionAccess().getTypeEnumCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__EnumerationAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getEnumerationEnumCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getEnumValueAccess().getEnumerationEnumIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnumValueAccess().getEnumerationEnumIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getEnumValueAccess().getEnumerationEnumCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getValueSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEnumValueAccess().getValueSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__EnumerationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getEnumerationEnumCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getEnumValueAccess().getEnumerationEnumIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnumValueAccess().getEnumerationEnumIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getEnumValueAccess().getEnumerationEnumCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__ValueAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getValueSTRINGTerminalRuleCall_1_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getEnumValueAccess().getValueSTRINGTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
			'true'
			{ after(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerValueAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerValueAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalValueAccess().getValueDECIMALTerminalRuleCall_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getDecimalValueAccess().getValueDECIMALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateValueAccess().getValueDATETerminalRuleCall_0()); }
		RULE_DATE
		{ after(grammarAccess.getDateValueAccess().getValueDATETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__LegalValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getLegalValuesTypeValueParserRuleCall_1_0()); }
		ruleTypeValue
		{ after(grammarAccess.getTypesAccess().getLegalValuesTypeValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Types__LegalValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypesAccess().getLegalValuesTypeValueParserRuleCall_2_1_0()); }
		ruleTypeValue
		{ after(grammarAccess.getTypesAccess().getLegalValuesTypeValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__LegalValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationsAccess().getLegalValuesEnumParserRuleCall_1_0()); }
		ruleEnum
		{ after(grammarAccess.getEnumerationsAccess().getLegalValuesEnumParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerations__LegalValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationsAccess().getLegalValuesEnumParserRuleCall_2_1_0()); }
		ruleEnum
		{ after(grammarAccess.getEnumerationsAccess().getLegalValuesEnumParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeValueAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeValueAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__FeaturesAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeValueAccess().getFeaturesFeatureParserRuleCall_1_1_0_0()); }
		ruleFeature
		{ after(grammarAccess.getTypeValueAccess().getFeaturesFeatureParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeValue__FeaturesAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeValueAccess().getFeaturesFeatureParserRuleCall_1_1_1_1_0()); }
		ruleFeature
		{ after(grammarAccess.getTypeValueAccess().getFeaturesFeatureParserRuleCall_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DECIMAL : '-'? ('0'..'9')+ '.' ('0'..'9')+;

RULE_INT : '-'? ('0'..'9')+;

RULE_DATE : RULE_INT '-' RULE_INT '-' RULE_INT;

RULE_ID : ('^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*|('`'|'[') ('\\' .|~(('\\'|'`'|'['|']')))* ('`'|']'));

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
